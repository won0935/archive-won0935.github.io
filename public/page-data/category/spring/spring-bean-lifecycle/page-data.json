{"componentChunkName":"component---src-templates-post-tsx","path":"/category/spring/spring-bean-lifecycle/","result":{"data":{"site":{"siteMetadata":{"title":"Jay 기술 블로그","author":"won0935","siteUrl":"https://won0935.github.io"}},"markdownRemark":{"id":"286c7b51-4b57-5678-882c-ccb641216d31","excerpt":"Spring Bean Lifecycle 설정 스프링 컨테이너 내에서 Bean의 생명주기를 설정하는 방법은 3가지가 있다. 스프링에서 제공하는 인터페이스 (, ) 설정 정보에서 초기화 메서드, 종료 메서드 지정하는 방법 ,  어노테이션…","html":"<h1 id=\"spring-bean-lifecycle-설정\" style=\"position:relative;\"><a href=\"#spring-bean-lifecycle-%EC%84%A4%EC%A0%95\" aria-label=\"spring bean lifecycle 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Bean Lifecycle 설정</h1>\n<p>스프링 컨테이너 내에서 <strong>Bean의 생명주기를 설정하는 방법</strong>은 3가지가 있다.</p>\n<ol>\n<li>스프링에서 제공하는 인터페이스 (<code class=\"language-text\">InitializingBean</code>, <code class=\"language-text\">DisposableBean</code>)</li>\n<li>설정 정보에서 초기화 메서드, 종료 메서드 지정하는 방법</li>\n<li><code class=\"language-text\">@PostConstruct</code>, <code class=\"language-text\">@PreDestroy</code> 어노테이션</li>\n</ol>\n<h2 id=\"1-스프링에서-제공하는-인터페이스잘-안씀\" style=\"position:relative;\"><a href=\"#1-%EC%8A%A4%ED%94%84%EB%A7%81%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9E%98-%EC%95%88%EC%94%80\" aria-label=\"1 스프링에서 제공하는 인터페이스잘 안씀 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <del>스프링에서 제공하는 인터페이스(잘 안씀)</del></h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleBean</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InitializingBean</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DisposableBean</span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token comment\">// 중략</span>\n  \n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 초기화 </span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 메모리 반납, 연결 종료와 같은 과정 </span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"이-방식의-단점\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"이 방식의 단점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 방식의 단점</h3>\n<ul>\n<li><strong>스프링 전용 인터페이스</strong>에 코드가 의존</li>\n<li>메서드를 오버라이드하기 때문에 <strong>메서드명 변경 불가능</strong></li>\n<li>코드를 커스터마이징할 수 없는 외부 라이브러리에 적용 불가능</li>\n</ul>\n<h2 id=\"2-설정-정보에서-초기화-메서드-종료-메서드-지정하는-방법\" style=\"position:relative;\"><a href=\"#2-%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4%EC%97%90%EC%84%9C-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%A2%85%EB%A3%8C-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%A7%80%EC%A0%95%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"2 설정 정보에서 초기화 메서드 종료 메서드 지정하는 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 설정 정보에서 초기화 메서드, 종료 메서드 지정하는 방법</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleBean</span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token comment\">// 중략</span>\n  \n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 초기화 </span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 메모리 반납, 연결 종료와 같은 과정 </span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LifeCycleConfig</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>initMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"initialize\"</span><span class=\"token punctuation\">,</span> destroyMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"close\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ExampleBean</span> <span class=\"token function\">exampleBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 생략</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"이-방식의-장점\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"이 방식의 장점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 방식의 장점</h3>\n<ul>\n<li>메서드 <strong>이름을 자유롭게</strong> 부여 가능</li>\n<li>스프링 코드에 <strong>의존하지 않음</strong></li>\n<li>설정 정보를 사용하기 때문에 코드를 커스터마이징 할 수 없는 <strong>외부 라이브러리</strong>에서도 적용 가능</li>\n</ul>\n<h3 id=\"이-방식의-단점-1\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90-1\" aria-label=\"이 방식의 단점 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 방식의 단점</h3>\n<ul>\n<li><code class=\"language-text\">Bean</code> 지정 시 <code class=\"language-text\">initMethod</code>와 <code class=\"language-text\">destroyMethod</code>를 직접 지정해야 하는 번거로움</li>\n<li><code class=\"language-text\">@Bean</code>의 <code class=\"language-text\">destroyMethod</code> 속성의 특징라이브러리는 대부분 종료 메서드명이 <code class=\"language-text\">close</code> 혹은 <code class=\"language-text\">shutdown</code></li>\n<li><code class=\"language-text\">@Bean</code>의 <code class=\"language-text\">destroyMethod</code>는 기본값이 inferred (추론)으로 등록 즉, <code class=\"language-text\">close</code>, <code class=\"language-text\">shutdown</code>라는 이름의 메서드가 종료 메서드라고 추론하고 자동으로 호출해줌 (즉, 종료 메서드를 따로 부여하지 않더라도 잘 작동)</li>\n<li>inferred 기능을 사용하기 싫다면 명시적으로 <code class=\"language-text\">destoroyMethod=\"\"</code> 와 같이 공백을 지정해줘야 함</li>\n</ul>\n<h2 id=\"3-postconstruct-predestroy-어노테이션\" style=\"position:relative;\"><a href=\"#3-postconstruct-predestroy-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"3 postconstruct predestroy 어노테이션 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <code class=\"language-text\">@PostConstruct</code>, <code class=\"language-text\">@PreDestroy</code> 어노테이션</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleBean</span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token comment\">// 중략</span>\n  \n  <span class=\"token annotation punctuation\">@PostConstruct</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 초기화 </span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token annotation punctuation\">@PreDestroy</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 메모리 반납, 연결 종료와 같은 과정 </span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LifeCycleConfig</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@Bean</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ExampleBean</span> <span class=\"token function\">exampleBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 생략</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"이-방식의-장점-1\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9E%A5%EC%A0%90-1\" aria-label=\"이 방식의 장점 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 방식의 장점</h3>\n<ul>\n<li>최신 스프링에서 <strong>권장하는 방법</strong></li>\n<li><strong>어노테이션</strong>만 붙이면 되기 때문에 편리함</li>\n<li>스프링에 종속적인 기술이 아니라 <strong>자바 표준 코드</strong>이기 때문에 다른 컨테이너에서도 동작</li>\n<li><strong>컴포넌트 스캔</strong>과 잘 어울림</li>\n</ul>\n<h3 id=\"이-방식의-유일한-단점\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9C%A0%EC%9D%BC%ED%95%9C-%EB%8B%A8%EC%A0%90\" aria-label=\"이 방식의 유일한 단점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 방식의 유일한 단점</h3>\n<ul>\n<li>커스터마이징이 불가능한 <strong>외부 라이브러리</strong>에서 사용 불가능 (외부 라이브러리에서 초기화, 종료를 해야 할 경우 두 번째 방법 즉, <code class=\"language-text\">@Bean</code>의 <code class=\"language-text\">initMethod</code>와 <code class=\"language-text\">destroyMethod</code> 키워드를 사용)</li>\n</ul>\n<h1 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h1>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-kotlin line-numbers\"><code class=\"language-kotlin\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>코드수정이 되나<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation builtin\">@PostConstruct</span><span class=\"token punctuation\">,</span> <span class=\"token annotation builtin\">@PreDestroy</span> 사용\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">//그럼 외부 라이브러리 인가?</span>\n  <span class=\"token annotation builtin\">@Bean</span><span class=\"token punctuation\">(</span>initMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> destroyMethod <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> 사용\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/spring/spring-bean-lifecycle/#spring-bean-lifecycle-%EC%84%A4%EC%A0%95\">Spring Bean Lifecycle 설정</a></p>\n<ul>\n<li>\n<p><a href=\"/category/spring/spring-bean-lifecycle/#1-%EC%8A%A4%ED%94%84%EB%A7%81%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%9E%98-%EC%95%88%EC%94%80\">1. <del>스프링에서 제공하는 인터페이스(잘 안씀)</del></a></p>\n<ul>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90\">이 방식의 단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/spring/spring-bean-lifecycle/#2-%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4%EC%97%90%EC%84%9C-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%A2%85%EB%A3%8C-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%A7%80%EC%A0%95%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">2. 설정 정보에서 초기화 메서드, 종료 메서드 지정하는 방법</a></p>\n<ul>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9E%A5%EC%A0%90\">이 방식의 장점</a></li>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90-1\">이 방식의 단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/spring/spring-bean-lifecycle/#3-postconstruct-predestroy-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\">3. <code class=\"language-text\">@PostConstruct</code>, <code class=\"language-text\">@PreDestroy</code> 어노테이션</a></p>\n<ul>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9E%A5%EC%A0%90-1\">이 방식의 장점</a></li>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9C%A0%EC%9D%BC%ED%95%9C-%EB%8B%A8%EC%A0%90\">이 방식의 유일한 단점</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/spring/spring-bean-lifecycle/#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>","frontmatter":{"title":"[Spring] Spring Bean Lifecycle","description":"","date":"2022.10.25","emoji":"🔋","category":"spring"}}},"pageContext":{"slug":"/category/spring/spring-bean-lifecycle/","relatedPosts":[{"node":{"fields":{"slug":"/category/spring/spring-camp-2023/"},"frontmatter":{"title":"[Spring] 인프런 스프링캠프 2023","date":"2023.04.22","emoji":"🌿","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/pessimistic-optimistic-lock/"},"frontmatter":{"title":"[Lock] 동시성이슈에 대한 해결 방법","date":"2023.01.03","emoji":"🔒","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/jdk-dynamic-proxy-vs-cglib/"},"frontmatter":{"title":"[Spring] JDK Dynamic Proxy VS CGLIB","date":"2022.10.30","emoji":"🪔","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/bean-post-processor/"},"frontmatter":{"title":"[Spring] BeanPostProcessor","date":"2022.10.20","emoji":"🛟","category":"spring"}}}]}},"staticQueryHashes":["196006245","1984257895","2528810007"]}