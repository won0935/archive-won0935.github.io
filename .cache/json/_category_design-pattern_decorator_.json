{"data":{"site":{"siteMetadata":{"title":"Jay 기술 블로그","author":"won0935","siteUrl":"https://won0935.github.io"}},"markdownRemark":{"id":"859fe8b1-4253-5dc3-b19f-40ac25ae8d57","excerpt":"🎁 데코레이터 패턴이란 객체에 추가적인 요건을 동적으로 첨가한다.\n데코레이터는 서브클래스를 만드는 것을 통해서 기능을 유연하게 확장할 수 있는 방법을 제공한다. 클래스 다이어그램 image 에 새로운 행동을 동적으로 추가할 수 있다.\n각 데코레이터 안에는 구성요소(Component…","html":"<h2 id=\"-데코레이터-패턴이란\" style=\"position:relative;\"><a href=\"#-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\" aria-label=\" 데코레이터 패턴이란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎁 데코레이터 패턴이란</h2>\n<blockquote>\n<p>객체에 <strong>추가적인 요건</strong>을 동적으로 첨가한다.\n데코레이터는 <strong>서브클래스</strong>를 만드는 것을 통해서 기능을 유연하게 확장할 수 있는 방법을 제공한다.</p>\n</blockquote>\n<h3 id=\"클래스-다이어그램\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8\" aria-label=\"클래스 다이어그램 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 다이어그램</h3>\n<p><img src=\"https://user-images.githubusercontent.com/55419159/141609476-9786bc6c-9a46-45d3-b2ad-63c6678abc0e.png\" alt=\"image\"></p>\n<ul>\n<li><code class=\"language-text\">ConcreteComponent</code>에 <strong>새로운 행동을 동적으로 추가</strong>할 수 있다.\n각 데코레이터 안에는 구성요소(Component)에 대란 레퍼런스가 들어있는 인스턴스 변수가있다.</li>\n<li><code class=\"language-text\">Decorator</code>는 자신이 장식할 구성요소(Component)와 같은 인터페이스 또는 <strong>추상 클래스를 구현</strong>한다.</li>\n<li><code class=\"language-text\">ConcreteDecoratorA</code>, <code class=\"language-text\">ConcreteDecoratorB</code> 에는 그 객체가 장식하고있는(데코레이터가 감싸고 있는 Component객체)을 위한 인스턴스 변수가 있다.\n따라서 데코레이터는 <code class=\"language-text\">Component</code>의 <strong>상태를 확장</strong>할 수 있다.</li>\n<li><code class=\"language-text\">ConcreteDecoratorA</code>, <code class=\"language-text\">ConcreteDecoratorB</code> 데코레이터에서 <strong>새로운 메소드를 추가</strong>할 수도 있다.\n하지만 일반적으로 새로운 메소드를 추가하는 대신 <code class=\"language-text\">Component</code>에 원래 있던 메소드를 호출하기 전, 또는 후에 <strong>별도의 작업을 처리하는 방식</strong>으로 새로운 기능을 추가한다.</li>\n</ul>\n<hr>\n<h2 id=\"활용예제\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9%EC%98%88%EC%A0%9C\" aria-label=\"활용예제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용예제</h2>\n<h3 id=\"️-카페-주문시스템-만들기\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%B9%B4%ED%8E%98-%EC%A3%BC%EB%AC%B8%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"️ 카페 주문시스템 만들기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☕️ 카페 주문시스템 만들기</h3>\n<blockquote>\n<p><em>커피를 주문할 때는 스팀 우유나 두유, 모카를 추가하고, 그 위에 휘핑 크림을 얹기도 한다.\n각각을 추가할 때마다 커피 가격이 올라가기 때문에 주문 시스템에서도 그런 점들을 모두 고려해야 한다.</em></p>\n</blockquote>\n<p>기존의 코드는 <strong>건드리지 않은 채로</strong> 확장을 통해서 새로운 행동을 간단하게 추가할 수 있는 <strong>데코레이터 패턴</strong>을 사용해보자.</p>\n<p>우선 특정 음료에서 시작해서 첨가물로 그 음료를 장식 해보자.</p>\n<ol>\n<li><code class=\"language-text\">DarkRoast</code> 객체를 가져온다.</li>\n<li><code class=\"language-text\">Mocha</code> 객체로 장식한다.</li>\n<li><code class=\"language-text\">Whip</code> 객체로 장식한다.</li>\n<li><code class=\"language-text\">cost()</code> 메소드를 호출한다. 이때 첨가물의 가격을 계산하는 일은 해당 객체들에게 위임된다.</li>\n</ol>\n<p>디자인을 바탕으로 코드를 만들어보자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/55419159/141609675-00fe88e7-909c-4349-9dc8-88f3eeca5d05.png\" alt=\"image\"></p>\n<h4 id=\"beverage-추상클래스-구현\" style=\"position:relative;\"><a href=\"#beverage-%EC%B6%94%EC%83%81%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B5%AC%ED%98%84\" aria-label=\"beverage 추상클래스 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Beverage</code> 추상클래스 구현</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Beverage</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description <span class=\"token operator\">=</span> <span class=\"token string\">\"Empty\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">int</span> <span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"beverage-를-확장하는-condimentdecorator-구현\" style=\"position:relative;\"><a href=\"#beverage-%EB%A5%BC-%ED%99%95%EC%9E%A5%ED%95%98%EB%8A%94-condimentdecorator-%EA%B5%AC%ED%98%84\" aria-label=\"beverage 를 확장하는 condimentdecorator 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Beverage</code> 를 확장하는 <code class=\"language-text\">CondimentDecorator</code> 구현</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CondimentDecorator</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Beverage</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"beverage-를-활용해-음료-객체-구현\" style=\"position:relative;\"><a href=\"#beverage-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4-%EC%9D%8C%EB%A3%8C-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84\" aria-label=\"beverage 를 활용해 음료 객체 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Beverage</code> 를 활용해 음료 객체 구현</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Espresso</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Beverage</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Espresso</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"에스프레소\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">3500</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HouseBlend</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Beverage</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HouseBlend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"하우스블렌드\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"condimentdecorator-를-활용해-꾸며진-객체-구현\" style=\"position:relative;\"><a href=\"#condimentdecorator-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4-%EA%BE%B8%EB%A9%B0%EC%A7%84-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84\" aria-label=\"condimentdecorator 를 활용해 꾸며진 객체 구현 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">CondimentDecorator</code> 를 활용해 꾸며진 객체 구현</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Mocha</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">CondimentDecorator</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Beverage</span> beverage<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Mocha</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Beverage</span> beverage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>beverage <span class=\"token operator\">=</span> beverage<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> beverage<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\", 모카\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">500</span> <span class=\"token operator\">+</span> beverage<span class=\"token punctuation\">.</span><span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"테스트\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CoffeeStore</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Beverage</span> beverage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Espresso</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>beverage<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" cost : \"</span> <span class=\"token operator\">+</span> beverage<span class=\"token punctuation\">.</span><span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Beverage</span> beverage1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DarkRoast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mocha</span><span class=\"token punctuation\">(</span>beverage1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mocha</span><span class=\"token punctuation\">(</span>beverage1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Whip</span><span class=\"token punctuation\">(</span>beverage1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>beverage1<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" cost : \"</span> <span class=\"token operator\">+</span> beverage1<span class=\"token punctuation\">.</span><span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Beverage</span> beverage2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HouseBlend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Soy</span><span class=\"token punctuation\">(</span>beverage2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Mocha</span><span class=\"token punctuation\">(</span>beverage2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        beverage2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Whip</span><span class=\"token punctuation\">(</span>beverage2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>beverage2<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" cost : \"</span> <span class=\"token operator\">+</span> beverage2<span class=\"token punctuation\">.</span><span class=\"token function\">cost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"디자인-원칙\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9B%90%EC%B9%99\" aria-label=\"디자인 원칙 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 원칙</h3>\n<blockquote>\n<p><strong>OCP(Open-Closed principle)</strong>\n<em>클래스는 확장에 대해서는 열려 있어야하지만 코드 변경에 대해서는 닫혀 있어야 한다.</em></p>\n</blockquote>\n<hr>\n<h2 id=\"데코레이터가-적용된-예--자바-io\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%9C-%EC%98%88--%EC%9E%90%EB%B0%94-io\" aria-label=\"데코레이터가 적용된 예  자바 io permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데코레이터가 적용된 예 : 자바 I/O</h2>\n<p>개발하면서 스트림의 개념이 잘 잡히지 않았을때.. 자바 I/O API를 보고 한숨을 쉬는 사람들이 나말고도 많았을 거라 생각한다.\n기반스트림과 보조스트림을 데코레이터 패턴을 배우고 나서 머리속에서 다시 정리해보면 많은 클래스들이 좀더 친근하게 다가 온다.</p>\n<p>실제 자바에서 클래스 다이어그램을 그려보면</p>\n<p><img src=\"https://user-images.githubusercontent.com/55419159/141609807-708dd839-da97-46a2-832b-2c82ecc82bd4.png\" alt=\"image\"></p>\n<p><code class=\"language-text\">InputStream</code> 이 추상구성요소이고 모든 보조스트림의 조상인 <code class=\"language-text\">FilterInputStream</code> 이 추상 데코레이터 이다.\n<code class=\"language-text\">FilterInputStream</code>을 상속받아 구현하는 <code class=\"language-text\">BufferedInputStream</code> 클래스들이 구상 데코레이터이다.\n<code class=\"language-text\">InputStream</code>을 상속받는 <code class=\"language-text\">FileInputStream</code> 같은 기반 스트림들은 데코레이터로 포장될 구상 구성요소 역할을 한다.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/design-pattern/decorator/#-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%8C%A8%ED%84%B4%EC%9D%B4%EB%9E%80\">🎁 데코레이터 패턴이란</a></p>\n<ul>\n<li><a href=\"/category/design-pattern/decorator/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8\">클래스 다이어그램</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/design-pattern/decorator/#%ED%99%9C%EC%9A%A9%EC%98%88%EC%A0%9C\">활용예제</a></p>\n<ul>\n<li>\n<p><a href=\"/category/design-pattern/decorator/#%EF%B8%8F-%EC%B9%B4%ED%8E%98-%EC%A3%BC%EB%AC%B8%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">☕️ 카페 주문시스템 만들기</a></p>\n<ul>\n<li><a href=\"/category/design-pattern/decorator/#beverage-%EC%B6%94%EC%83%81%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B5%AC%ED%98%84\"><code class=\"language-text\">Beverage</code> 추상클래스 구현</a></li>\n<li><a href=\"/category/design-pattern/decorator/#beverage-%EB%A5%BC-%ED%99%95%EC%9E%A5%ED%95%98%EB%8A%94-condimentdecorator-%EA%B5%AC%ED%98%84\"><code class=\"language-text\">Beverage</code> 를 확장하는 <code class=\"language-text\">CondimentDecorator</code> 구현</a></li>\n<li><a href=\"/category/design-pattern/decorator/#beverage-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4-%EC%9D%8C%EB%A3%8C-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84\"><code class=\"language-text\">Beverage</code> 를 활용해 음료 객체 구현</a></li>\n<li><a href=\"/category/design-pattern/decorator/#condimentdecorator-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%B4-%EA%BE%B8%EB%A9%B0%EC%A7%84-%EA%B0%9D%EC%B2%B4-%EA%B5%AC%ED%98%84\"><code class=\"language-text\">CondimentDecorator</code> 를 활용해 꾸며진 객체 구현</a></li>\n<li><a href=\"/category/design-pattern/decorator/#%ED%85%8C%EC%8A%A4%ED%8A%B8\">테스트</a></li>\n</ul>\n</li>\n<li><a href=\"/category/design-pattern/decorator/#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9B%90%EC%B9%99\">디자인 원칙</a></li>\n</ul>\n</li>\n<li><a href=\"/category/design-pattern/decorator/#%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%9C-%EC%98%88--%EC%9E%90%EB%B0%94-io\">데코레이터가 적용된 예 : 자바 I/O</a></li>\n</ul>","frontmatter":{"title":"[다자인패턴] 데코레이터 패턴","description":"","date":"2021.11.13","emoji":"🎁","category":"design-pattern"}}},"pageContext":{"slug":"/category/design-pattern/decorator/","relatedPosts":[{"node":{"fields":{"slug":"/category/design-pattern/adapt-and-facade/"},"frontmatter":{"title":"[다자인패턴] 어댑터 & 파사드 패턴","date":"2021.11.23","emoji":"🧤","category":"design-pattern"}}},{"node":{"fields":{"slug":"/category/design-pattern/observer/"},"frontmatter":{"title":"[다자인패턴] 옵저버 패턴","date":"2021.11.12","emoji":"🔭","category":"design-pattern"}}},{"node":{"fields":{"slug":"/category/design-pattern/composite/"},"frontmatter":{"title":"[다자인패턴] 컴포지트 패턴","date":"2021.11.11","emoji":"🌲","category":"design-pattern"}}},{"node":{"fields":{"slug":"/category/design-pattern/strategy/"},"frontmatter":{"title":"[다자인패턴] 스트레티지 패턴","date":"2021.11.11","emoji":"🦆","category":"design-pattern"}}}]}}