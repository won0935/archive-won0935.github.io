{"expireTime":9007200896353688000,"key":"transformer-remark-markdown-ast-ec690aa8a612086927452c96c4642a6a-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"infoCustomBlock","children":[{"type":"infoCustomBlockHeading","data":{"hName":"div","hProperties":{"className":"custom-block-heading"}},"children":[{"type":"text","value":"LEVEL 2 - ‘캐시’ 문제 보러 가기 !","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":26,"offset":26},"indent":[]}}]},{"type":"infoCustomBlockBody","data":{"hName":"div","hProperties":{"className":"custom-block-body"}},"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://programmers.co.kr/learn/courses/30/lessons/17680","children":[{"type":"text","value":"https://programmers.co.kr/learn/courses/30/lessons/17680","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}]}],"data":{"hName":"div","hProperties":{"className":["custom-block","info"]}},"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":59,"offset":96},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#프로그래머스-캐시-문제를-풀기-전에-","title":null,"children":[],"data":{"hProperties":{"aria-label":"프로그래머스 캐시 문제를 풀기 전에  permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"프로그래머스 캐시 문제를 풀기 전에 !","position":{"start":{"line":5,"column":4,"offset":101},"end":{"line":5,"column":25,"offset":122},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":98},"end":{"line":5,"column":25,"offset":122},"indent":[]},"data":{"id":"프로그래머스-캐시-문제를-풀기-전에-","htmlAttributes":{"id":"프로그래머스-캐시-문제를-풀기-전에-"},"hProperties":{"id":"프로그래머스-캐시-문제를-풀기-전에-","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"LRU 페이지 교체 알고리즘을 우선적으로 이해해야 합니다.","position":{"start":{"line":7,"column":1,"offset":124},"end":{"line":7,"column":33,"offset":156},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":124},"end":{"line":7,"column":33,"offset":156},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#lruleast-recently-used-페이지-교체-알고리즘이란","title":null,"children":[],"data":{"hProperties":{"aria-label":"lruleast recently used 페이지 교체 알고리즘이란 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"LRU(Least Recently Used) 페이지 교체 알고리즘이란?","position":{"start":{"line":9,"column":6,"offset":163},"end":{"line":9,"column":45,"offset":202},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":158},"end":{"line":9,"column":45,"offset":202},"indent":[]},"data":{"id":"lruleast-recently-used-페이지-교체-알고리즘이란","htmlAttributes":{"id":"lruleast-recently-used-페이지-교체-알고리즘이란"},"hProperties":{"id":"lruleast-recently-used-페이지-교체-알고리즘이란","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"캐시가 사용하는 ","position":{"start":{"line":11,"column":1,"offset":204},"end":{"line":11,"column":10,"offset":213},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">리소스의 양은 제한</code>","position":{"start":{"line":11,"column":10,"offset":213},"end":{"line":11,"column":22,"offset":225},"indent":[]}},{"type":"text","value":"되어 있으니, 캐시는 제한된 리소스 내에서 데이터를 ","position":{"start":{"line":11,"column":22,"offset":225},"end":{"line":11,"column":51,"offset":254},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">빠르게 데이터를 가져오기 위한 알고리즘</code>","position":{"start":{"line":11,"column":51,"offset":254},"end":{"line":11,"column":74,"offset":277},"indent":[]}},{"type":"text","value":"입니다.","position":{"start":{"line":11,"column":74,"offset":277},"end":{"line":11,"column":78,"offset":281},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":204},"end":{"line":11,"column":78,"offset":281},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#lru-알고리즘은-어떤-방식-","title":null,"children":[],"data":{"hProperties":{"aria-label":"lru 알고리즘은 어떤 방식  permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"LRU 알고리즘은 어떤 방식 ?","position":{"start":{"line":13,"column":6,"offset":288},"end":{"line":13,"column":23,"offset":305},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":283},"end":{"line":13,"column":23,"offset":305},"indent":[]},"data":{"id":"lru-알고리즘은-어떤-방식-","htmlAttributes":{"id":"lru-알고리즘은-어떤-방식-"},"hProperties":{"id":"lru-알고리즘은-어떤-방식-","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">LRU 알고리즘</code>","position":{"start":{"line":15,"column":1,"offset":307},"end":{"line":15,"column":11,"offset":317},"indent":[]}},{"type":"text","value":"은 메모리 상에서 가장 최근에 사용된 적이 없는 캐시의 메모리부터 대체하며 새로운 데이터로 갱신합니다.","position":{"start":{"line":15,"column":11,"offset":317},"end":{"line":15,"column":68,"offset":374},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":307},"end":{"line":15,"column":68,"offset":374},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"즉, ‘자주 불린 데이터가 미래에도 더 자주 불릴 것’이라는 개념에서 나온 알고리즘","position":{"start":{"line":17,"column":3,"offset":378},"end":{"line":17,"column":49,"offset":424},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":378},"end":{"line":17,"column":49,"offset":424},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":376},"end":{"line":17,"column":49,"offset":424},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#lru-알고리즘의-동작-과정","title":null,"children":[],"data":{"hProperties":{"aria-label":"lru 알고리즘의 동작 과정 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"LRU 알고리즘의 동작 과정","position":{"start":{"line":19,"column":6,"offset":431},"end":{"line":19,"column":21,"offset":446},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":426},"end":{"line":19,"column":21,"offset":446},"indent":[]},"data":{"id":"lru-알고리즘의-동작-과정","htmlAttributes":{"id":"lru-알고리즘의-동작-과정"},"hProperties":{"id":"lru-알고리즘의-동작-과정","style":"position:relative;"}}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"만약 현재 가져오고 싶은 데이터가 캐시에 존재하면 캐시에서 데이터를 가져온 후 다시 캐시 큐의 가장 뒷 부분에 데이터 삽입","position":{"start":{"line":21,"column":4,"offset":451},"end":{"line":21,"column":72,"offset":519},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":451},"end":{"line":21,"column":72,"offset":519},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":448},"end":{"line":22,"column":1,"offset":520},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"만약 데이터가 캐시에 존재하지 않으면 저장소에서 데이터를 가져온 후 가져온 데이터를 캐시에 삽입","position":{"start":{"line":23,"column":4,"offset":524},"end":{"line":23,"column":57,"offset":577},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":524},"end":{"line":23,"column":57,"offset":577},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":521},"end":{"line":24,"column":1,"offset":578},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"캐시가 꽉 차있다면 사용이 가장 적었던 큐의 가장 앞부분을 제거하고 가져오려는 데이터를 캐시 큐의 가장 뒷 부분에 데이터 삽입","position":{"start":{"line":25,"column":4,"offset":582},"end":{"line":25,"column":74,"offset":652},"indent":[]}}],"position":{"start":{"line":25,"column":4,"offset":582},"end":{"line":25,"column":74,"offset":652},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":579},"end":{"line":25,"column":74,"offset":652},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":448},"end":{"line":25,"column":74,"offset":652},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제-접근-방식","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 접근 방식 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제 접근 방식","position":{"start":{"line":27,"column":4,"offset":657},"end":{"line":27,"column":12,"offset":665},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":654},"end":{"line":27,"column":12,"offset":665},"indent":[]},"data":{"id":"문제-접근-방식","htmlAttributes":{"id":"문제-접근-방식"},"hProperties":{"id":"문제-접근-방식","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"프로그래머스의 ","position":{"start":{"line":29,"column":1,"offset":667},"end":{"line":29,"column":9,"offset":675},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">캐시</code>","position":{"start":{"line":29,"column":9,"offset":675},"end":{"line":29,"column":13,"offset":679},"indent":[]}},{"type":"text","value":" 알고리즘 문제 또한 위의 ","position":{"start":{"line":29,"column":13,"offset":679},"end":{"line":29,"column":28,"offset":694},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">LRU 알고리즘</code>","position":{"start":{"line":29,"column":28,"offset":694},"end":{"line":29,"column":38,"offset":704},"indent":[]}},{"type":"text","value":"을 적용하면 쉽게 풀 수 있습니다.","position":{"start":{"line":29,"column":38,"offset":704},"end":{"line":29,"column":57,"offset":723},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":667},"end":{"line":29,"column":57,"offset":723},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"단, 소문자, 대문자를 구분하지 않으므로 받은 문자열은 전부 소문자로 바꾸어 문제를 풀어야합니다.","position":{"start":{"line":31,"column":3,"offset":727},"end":{"line":31,"column":57,"offset":781},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":727},"end":{"line":31,"column":57,"offset":781},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":725},"end":{"line":31,"column":57,"offset":781},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":725},"end":{"line":31,"column":57,"offset":781},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이-코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 코드 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이 코드","position":{"start":{"line":33,"column":4,"offset":786},"end":{"line":33,"column":9,"offset":791},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":783},"end":{"line":33,"column":9,"offset":791},"indent":[]},"data":{"id":"풀이-코드","htmlAttributes":{"id":"풀이-코드"},"hProperties":{"id":"풀이-코드","style":"position:relative;"}}},{"type":"html","value":"<div class=\"gatsby-code-title\">Python</div>"},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> collections\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>cacheSize<span class=\"token punctuation\">,</span> cities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    caches <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> city <span class=\"token keyword\">in</span> cities<span class=\"token punctuation\">:</span>\n        city <span class=\"token operator\">=</span> city<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># cache hit</span>\n        <span class=\"token keyword\">if</span> city <span class=\"token keyword\">in</span> caches<span class=\"token punctuation\">:</span>\n            caches<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span>\n            caches<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># cache miss</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> cacheSize <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cities<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 최근 사용하지 않은 캐시 업데이트</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>caches<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> cacheSize<span class=\"token punctuation\">:</span>\n                caches<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            caches<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>city<span class=\"token punctuation\">)</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">5</span>\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":35,"column":1,"offset":793},"end":{"line":58,"column":4,"offset":1393},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":1,"offset":1394}}}}