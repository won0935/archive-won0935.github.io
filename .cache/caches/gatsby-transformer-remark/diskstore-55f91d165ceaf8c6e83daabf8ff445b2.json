{"expireTime":9007200896353687000,"key":"transformer-remark-markdown-ast-7e6a2fe8cd6a8ae70d9d7331cab7ec47-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#개요","title":null,"children":[],"data":{"hProperties":{"aria-label":"개요 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"개요","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":6,"offset":6},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":6,"offset":6},"indent":[]},"data":{"id":"개요","htmlAttributes":{"id":"개요"},"hProperties":{"id":"개요","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">확장</code>","position":{"start":{"line":4,"column":1,"offset":8},"end":{"line":4,"column":5,"offset":12},"indent":[]}},{"type":"text","value":"에는 자유롭게 열려있고 ","position":{"start":{"line":4,"column":5,"offset":12},"end":{"line":4,"column":18,"offset":25},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">변경</code>","position":{"start":{"line":4,"column":18,"offset":25},"end":{"line":4,"column":22,"offset":29},"indent":[]}},{"type":"text","value":"에는 굳게 닫혀 있다는 객체 지향 설계의 핵심 원칙인 ","position":{"start":{"line":4,"column":22,"offset":29},"end":{"line":4,"column":52,"offset":59},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">개방 폐쇄 원칙</code>","position":{"start":{"line":4,"column":52,"offset":59},"end":{"line":4,"column":62,"offset":69},"indent":[]}},{"type":"text","value":"(OCP) 을 생각해봅시다.","position":{"start":{"line":4,"column":62,"offset":69},"end":{"line":4,"column":77,"offset":84},"indent":[]}},{"type":"break","position":{"start":{"line":4,"column":77,"offset":84},"end":{"line":5,"column":1,"offset":87},"indent":[1]}},{"type":"text","value":"각각 다른 목적과 이유에 의해서 다른 시점에 독립적으로 변경될 수 있는 효율적인 구조를 만들어주는 것이 ","position":{"start":{"line":5,"column":1,"offset":87},"end":{"line":5,"column":59,"offset":145},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">개방 폐쇄 원칙</code>","position":{"start":{"line":5,"column":59,"offset":145},"end":{"line":5,"column":69,"offset":155},"indent":[]}},{"type":"text","value":"입니다.","position":{"start":{"line":5,"column":69,"offset":155},"end":{"line":5,"column":73,"offset":159},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":8},"end":{"line":5,"column":73,"offset":159},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">템플릿</code>","position":{"start":{"line":7,"column":1,"offset":161},"end":{"line":7,"column":6,"offset":166},"indent":[]}},{"type":"text","value":"이란 이렇게 바뀌는 성질 중에서도 ","position":{"start":{"line":7,"column":6,"offset":166},"end":{"line":7,"column":25,"offset":185},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">변경이 일어나지 않는 성질을 가진 부분</code>","position":{"start":{"line":7,"column":25,"offset":185},"end":{"line":7,"column":48,"offset":208},"indent":[]}},{"type":"text","value":"을 ","position":{"start":{"line":7,"column":48,"offset":208},"end":{"line":7,"column":50,"offset":210},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">자유롭게 변경되는 성질을 가진 부분</code>","position":{"start":{"line":7,"column":50,"offset":210},"end":{"line":7,"column":71,"offset":231},"indent":[]}},{"type":"text","value":"으로부터 분리시켜 효과적으로 재사용할 수 있도록 하는 방법입니다.","position":{"start":{"line":7,"column":71,"offset":231},"end":{"line":7,"column":107,"offset":267},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":161},"end":{"line":7,"column":107,"offset":267},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#변하는-것과-변하지-않는-것","title":null,"children":[],"data":{"hProperties":{"aria-label":"변하는 것과 변하지 않는 것 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"변하는 것과 변하지 않는 것","position":{"start":{"line":9,"column":4,"offset":272},"end":{"line":9,"column":19,"offset":287},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":269},"end":{"line":9,"column":19,"offset":287},"indent":[]},"data":{"id":"변하는-것과-변하지-않는-것","htmlAttributes":{"id":"변하는-것과-변하지-않는-것"},"hProperties":{"id":"변하는-것과-변하지-않는-것","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"JDBC에서 ","position":{"start":{"line":11,"column":1,"offset":289},"end":{"line":11,"column":8,"offset":296},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">try/catch/finally</code>","position":{"start":{"line":11,"column":8,"offset":296},"end":{"line":11,"column":27,"offset":315},"indent":[]}},{"type":"text","value":" 예외 처리를 적용한 코드를 보면서 생각해봅시다.","position":{"start":{"line":11,"column":27,"offset":315},"end":{"line":11,"column":54,"offset":342},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":289},"end":{"line":11,"column":54,"offset":342},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Connection</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        c <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ps <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변하는 부분</span>\n        ps<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                ps<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                c<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":13,"column":1,"offset":344},"end":{"line":40,"column":4,"offset":954},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"코드를 보자마자 너무 막막합니다 😦","position":{"start":{"line":42,"column":1,"offset":956},"end":{"line":42,"column":21,"offset":976},"indent":[]}},{"type":"break","position":{"start":{"line":42,"column":21,"offset":976},"end":{"line":43,"column":1,"offset":979},"indent":[1]}},{"type":"text","value":"복잡한 ","position":{"start":{"line":43,"column":1,"offset":979},"end":{"line":43,"column":5,"offset":983},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">try/catch/finally</code>","position":{"start":{"line":43,"column":5,"offset":983},"end":{"line":43,"column":24,"offset":1002},"indent":[]}},{"type":"text","value":" 블록이 2중으로 중첩까지되며 만드는 모든 메소드마다 코드가 반복될 것입니다.","position":{"start":{"line":43,"column":24,"offset":1002},"end":{"line":43,"column":67,"offset":1045},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":956},"end":{"line":43,"column":67,"offset":1045},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"이런 코드를 효과적으로 다룰 수 있는 방법은 없을까?","position":{"start":{"line":45,"column":3,"offset":1049},"end":{"line":45,"column":32,"offset":1078},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1047},"end":{"line":45,"column":34,"offset":1080},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1047},"end":{"line":45,"column":34,"offset":1080},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이 문제의 핵심은 많은 곳에서 ","position":{"start":{"line":47,"column":1,"offset":1082},"end":{"line":47,"column":18,"offset":1099},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">중복되고 변하지 않는 코드</code>","position":{"start":{"line":47,"column":18,"offset":1099},"end":{"line":47,"column":34,"offset":1115},"indent":[]}},{"type":"text","value":" 와 ","position":{"start":{"line":47,"column":34,"offset":1115},"end":{"line":47,"column":37,"offset":1118},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">자주 확장되고 변하는 코드</code>","position":{"start":{"line":47,"column":37,"offset":1118},"end":{"line":47,"column":53,"offset":1134},"indent":[]}},{"type":"text","value":"를 ","position":{"start":{"line":47,"column":53,"offset":1134},"end":{"line":47,"column":55,"offset":1136},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">분리</code>","position":{"start":{"line":47,"column":55,"offset":1136},"end":{"line":47,"column":59,"offset":1140},"indent":[]}},{"type":"text","value":"해내는 작업입니다.","position":{"start":{"line":47,"column":59,"offset":1140},"end":{"line":47,"column":69,"offset":1150},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1082},"end":{"line":47,"column":69,"offset":1150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"위의 코드에서 ","position":{"start":{"line":49,"column":1,"offset":1152},"end":{"line":49,"column":9,"offset":1160},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">변하지 않는 부분</code>","position":{"start":{"line":49,"column":9,"offset":1160},"end":{"line":49,"column":20,"offset":1171},"indent":[]}},{"type":"text","value":"과 ","position":{"start":{"line":49,"column":20,"offset":1171},"end":{"line":49,"column":22,"offset":1173},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">변하는 부분</code>","position":{"start":{"line":49,"column":22,"offset":1173},"end":{"line":49,"column":30,"offset":1181},"indent":[]}},{"type":"text","value":"을 분리할 수 있습니다.","position":{"start":{"line":49,"column":30,"offset":1181},"end":{"line":49,"column":43,"offset":1194},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1152},"end":{"line":49,"column":43,"offset":1194},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변하지 않는 부분","position":{"start":{"line":51,"column":4,"offset":1199},"end":{"line":51,"column":13,"offset":1208},"indent":[]}}],"position":{"start":{"line":51,"column":4,"offset":1199},"end":{"line":51,"column":13,"offset":1208},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DB를 연결하고 쿼리를 실행시키고 리소스를 반환(close) 작업","position":{"start":{"line":53,"column":6,"offset":1215},"end":{"line":53,"column":42,"offset":1251},"indent":[]}}],"position":{"start":{"line":53,"column":6,"offset":1215},"end":{"line":53,"column":42,"offset":1251},"indent":[]}}],"position":{"start":{"line":53,"column":4,"offset":1213},"end":{"line":53,"column":42,"offset":1251},"indent":[]}}],"position":{"start":{"line":53,"column":4,"offset":1213},"end":{"line":53,"column":42,"offset":1251},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1196},"end":{"line":54,"column":1,"offset":1252},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변하는 부분","position":{"start":{"line":55,"column":4,"offset":1256},"end":{"line":55,"column":10,"offset":1262},"indent":[]}}],"position":{"start":{"line":55,"column":4,"offset":1256},"end":{"line":55,"column":10,"offset":1262},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"PrepareStatement를 생성하는 작업 + 쿼리문","position":{"start":{"line":56,"column":6,"offset":1268},"end":{"line":56,"column":37,"offset":1299},"indent":[]}}],"position":{"start":{"line":56,"column":6,"offset":1268},"end":{"line":56,"column":37,"offset":1299},"indent":[]}}],"position":{"start":{"line":56,"column":4,"offset":1266},"end":{"line":56,"column":37,"offset":1299},"indent":[]}}],"position":{"start":{"line":56,"column":4,"offset":1266},"end":{"line":56,"column":37,"offset":1299},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1253},"end":{"line":56,"column":37,"offset":1299},"indent":[1]}}],"position":{"start":{"line":51,"column":1,"offset":1196},"end":{"line":56,"column":37,"offset":1299},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#작업의-분리","title":null,"children":[],"data":{"hProperties":{"aria-label":"작업의 분리 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"작업의 분리","position":{"start":{"line":58,"column":6,"offset":1306},"end":{"line":58,"column":12,"offset":1312},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1301},"end":{"line":58,"column":12,"offset":1312},"indent":[]},"data":{"id":"작업의-분리","htmlAttributes":{"id":"작업의-분리"},"hProperties":{"id":"작업의-분리","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"이렇게 구분지은 작업을 분리하는 방법은 보통 ","position":{"start":{"line":60,"column":1,"offset":1314},"end":{"line":60,"column":26,"offset":1339},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">3가지 방법</code>","position":{"start":{"line":60,"column":26,"offset":1339},"end":{"line":60,"column":34,"offset":1347},"indent":[]}},{"type":"text","value":"으로 접근할 수 있습니다.","position":{"start":{"line":60,"column":34,"offset":1347},"end":{"line":60,"column":48,"offset":1361},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1314},"end":{"line":60,"column":48,"offset":1361},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"메소드 추출 방법","position":{"start":{"line":62,"column":4,"offset":1366},"end":{"line":62,"column":13,"offset":1375},"indent":[]}}],"position":{"start":{"line":62,"column":4,"offset":1366},"end":{"line":62,"column":13,"offset":1375},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1363},"end":{"line":63,"column":1,"offset":1376},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"템플릿 메소드 패턴의 적용","position":{"start":{"line":64,"column":4,"offset":1380},"end":{"line":64,"column":18,"offset":1394},"indent":[]}}],"position":{"start":{"line":64,"column":4,"offset":1380},"end":{"line":64,"column":18,"offset":1394},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1377},"end":{"line":65,"column":1,"offset":1395},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"전략 패턴의 적용","position":{"start":{"line":66,"column":4,"offset":1399},"end":{"line":66,"column":13,"offset":1408},"indent":[]}}],"position":{"start":{"line":66,"column":4,"offset":1399},"end":{"line":66,"column":13,"offset":1408},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1396},"end":{"line":66,"column":13,"offset":1408},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1363},"end":{"line":66,"column":13,"offset":1408},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"첫번째, ","position":{"start":{"line":68,"column":1,"offset":1410},"end":{"line":68,"column":6,"offset":1415},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">메소드 추출 방법</code>","position":{"start":{"line":68,"column":6,"offset":1415},"end":{"line":68,"column":17,"offset":1426},"indent":[]}},{"type":"text","value":"은 중복이 많이 일어나는 변하지 않는 부분을 메소드로 추출해야하지만, 변하지 않는 부분이 변하는 부분을 감싸는 구조이기에 적용이 애매합니다.","position":{"start":{"line":68,"column":17,"offset":1426},"end":{"line":68,"column":95,"offset":1504},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1410},"end":{"line":68,"column":95,"offset":1504},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"두번째, ","position":{"start":{"line":70,"column":1,"offset":1506},"end":{"line":70,"column":6,"offset":1511},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿 메소드 패턴 방법</code>","position":{"start":{"line":70,"column":6,"offset":1511},"end":{"line":70,"column":21,"offset":1526},"indent":[]}},{"type":"text","value":"은 상속을 통해 기능을 확장시키는 방법입니다.","position":{"start":{"line":70,"column":21,"offset":1526},"end":{"line":70,"column":46,"offset":1551},"indent":[]}},{"type":"break","position":{"start":{"line":70,"column":46,"offset":1551},"end":{"line":71,"column":1,"offset":1554},"indent":[1]}},{"type":"text","value":"하지만, 상속은 다중 상속이 불가능하고 DAO 로직마다 상속을 통해 새로운 클래스를 생성해야한다는 단점이 있습니다.","position":{"start":{"line":71,"column":1,"offset":1554},"end":{"line":71,"column":65,"offset":1618},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1506},"end":{"line":71,"column":65,"offset":1618},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"세번째, ","position":{"start":{"line":73,"column":1,"offset":1620},"end":{"line":73,"column":6,"offset":1625},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략 패턴 방법</code>","position":{"start":{"line":73,"column":6,"offset":1625},"end":{"line":73,"column":16,"offset":1635},"indent":[]}},{"type":"text","value":"은 오브젝트를 아예 둘로 분리하고 인터페이스를 통해서만 의존하도록 만드는 방법입니다.","position":{"start":{"line":73,"column":16,"offset":1635},"end":{"line":73,"column":63,"offset":1682},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1620},"end":{"line":73,"column":63,"offset":1682},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#전략-패턴의-적용","title":null,"children":[],"data":{"hProperties":{"aria-label":"전략 패턴의 적용 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"전략 패턴의 적용","position":{"start":{"line":75,"column":6,"offset":1689},"end":{"line":75,"column":15,"offset":1698},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1684},"end":{"line":75,"column":15,"offset":1698},"indent":[]},"data":{"id":"전략-패턴의-적용","htmlAttributes":{"id":"전략-패턴의-적용"},"hProperties":{"id":"전략-패턴의-적용","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"여기서는 세번째 ","position":{"start":{"line":77,"column":1,"offset":1700},"end":{"line":77,"column":10,"offset":1709},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략 패턴 방법</code>","position":{"start":{"line":77,"column":10,"offset":1709},"end":{"line":77,"column":20,"offset":1719},"indent":[]}},{"type":"text","value":"을 적용해보려고 합니다.","position":{"start":{"line":77,"column":20,"offset":1719},"end":{"line":77,"column":33,"offset":1732},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1700},"end":{"line":77,"column":33,"offset":1732},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"변하는 부분을 분리한 것을 전략 패턴에서 ","position":{"start":{"line":79,"column":1,"offset":1734},"end":{"line":79,"column":24,"offset":1757},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략</code>","position":{"start":{"line":79,"column":24,"offset":1757},"end":{"line":79,"column":28,"offset":1761},"indent":[]}},{"type":"text","value":"이라고 합니다.","position":{"start":{"line":79,"column":28,"offset":1761},"end":{"line":79,"column":36,"offset":1769},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1734},"end":{"line":79,"column":36,"offset":1769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"먼저, 이를 인터페이스로 분리하면","position":{"start":{"line":81,"column":1,"offset":1771},"end":{"line":81,"column":19,"offset":1789},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1771},"end":{"line":81,"column":19,"offset":1789},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"1. StatementStrategy 전략 인터페이스","position":{"start":{"line":83,"column":3,"offset":1793},"end":{"line":83,"column":32,"offset":1822},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1791},"end":{"line":83,"column":34,"offset":1824},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1791},"end":{"line":83,"column":34,"offset":1824},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StatementStrategy</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">PreparedStatement</span> <span class=\"token function\">makePreparedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":85,"column":1,"offset":1826},"end":{"line":89,"column":4,"offset":1966},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2. deleteAll() 메소드의 기능을 구현한 StatementStrategy 전략 클래스","position":{"start":{"line":91,"column":3,"offset":1970},"end":{"line":91,"column":55,"offset":2022},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":1968},"end":{"line":91,"column":57,"offset":2024},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":1968},"end":{"line":91,"column":57,"offset":2024},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeleteAllStatement</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">StatementStrategy</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PreparedStatement</span> <span class=\"token function\">makePreparedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> ps<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":93,"column":1,"offset":2026},"end":{"line":101,"column":4,"offset":2311},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"다음으로 변하지 않는 부분을 분리합니다.","position":{"start":{"line":103,"column":1,"offset":2313},"end":{"line":103,"column":23,"offset":2335},"indent":[]}},{"type":"break","position":{"start":{"line":103,"column":23,"offset":2335},"end":{"line":104,"column":1,"offset":2338},"indent":[1]}},{"type":"text","value":"변하지 않는 부분을 분리한 것을 ","position":{"start":{"line":104,"column":1,"offset":2338},"end":{"line":104,"column":19,"offset":2356},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">컨텍스트</code>","position":{"start":{"line":104,"column":19,"offset":2356},"end":{"line":104,"column":25,"offset":2362},"indent":[]}},{"type":"text","value":"라고 합니다.","position":{"start":{"line":104,"column":25,"offset":2362},"end":{"line":104,"column":32,"offset":2369},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2313},"end":{"line":104,"column":32,"offset":2369},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"3. 중복되는 코드를 분리한 컨텍스트 코드","position":{"start":{"line":106,"column":3,"offset":2373},"end":{"line":106,"column":26,"offset":2396},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2371},"end":{"line":106,"column":28,"offset":2398},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2371},"end":{"line":106,"column":28,"offset":2398},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">jdbcContextWithStatementStrategy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StatementStrategy</span> stmt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Connection</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        c <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ps <span class=\"token operator\">=</span> stmt<span class=\"token punctuation\">.</span><span class=\"token function\">makePreparedStatement</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 컨텍스트에서 전략 사용</span>\n        ps<span class=\"token punctuation\">.</span><span class=\"token function\">executeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ps <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span> ps<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":108,"column":1,"offset":2400},"end":{"line":124,"column":4,"offset":2924},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"다음으로 ","position":{"start":{"line":126,"column":1,"offset":2926},"end":{"line":126,"column":6,"offset":2931},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">클라이언트</code>","position":{"start":{"line":126,"column":6,"offset":2931},"end":{"line":126,"column":13,"offset":2938},"indent":[]}},{"type":"text","value":"에서 직접적으로 ","position":{"start":{"line":126,"column":13,"offset":2938},"end":{"line":126,"column":22,"offset":2947},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략을 생성, 선택</code>","position":{"start":{"line":126,"column":22,"offset":2947},"end":{"line":126,"column":34,"offset":2959},"indent":[]}},{"type":"text","value":"해 사용하는 메서드를 작성합니다.","position":{"start":{"line":126,"column":34,"offset":2959},"end":{"line":126,"column":52,"offset":2977},"indent":[]}},{"type":"break","position":{"start":{"line":126,"column":52,"offset":2977},"end":{"line":127,"column":1,"offset":2980},"indent":[1]}},{"type":"text","value":"전략을 생성하고 생성한 전략을 컨텍스트에 ","position":{"start":{"line":127,"column":1,"offset":2980},"end":{"line":127,"column":24,"offset":3003},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">DI</code>","position":{"start":{"line":127,"column":24,"offset":3003},"end":{"line":127,"column":28,"offset":3007},"indent":[]}},{"type":"text","value":" 해줍니다.","position":{"start":{"line":127,"column":28,"offset":3007},"end":{"line":127,"column":34,"offset":3013},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":2926},"end":{"line":127,"column":34,"offset":3013},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"4. 클라이언트 책임을 담당할 deleteAll() 메소드","position":{"start":{"line":129,"column":3,"offset":3017},"end":{"line":129,"column":35,"offset":3049},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3015},"end":{"line":129,"column":37,"offset":3051},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3015},"end":{"line":129,"column":37,"offset":3051},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">StatementStrategy</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeleteAllStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">jdbcContextWithStatementStrategy</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":131,"column":1,"offset":3053},"end":{"line":136,"column":4,"offset":3218},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이제 구조로 볼때는 완벽한 전략 패턴의 모습을 만들었습니다.","position":{"start":{"line":138,"column":1,"offset":3220},"end":{"line":138,"column":34,"offset":3253},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":3220},"end":{"line":138,"column":34,"offset":3253},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#더-개선할-점","title":null,"children":[],"data":{"hProperties":{"aria-label":"더 개선할 점 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"더 개선할 점","position":{"start":{"line":140,"column":6,"offset":3260},"end":{"line":140,"column":13,"offset":3267},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":3255},"end":{"line":140,"column":13,"offset":3267},"indent":[]},"data":{"id":"더-개선할-점","htmlAttributes":{"id":"더-개선할-점"},"hProperties":{"id":"더-개선할-점","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"지금의 구조로는 ","position":{"start":{"line":142,"column":1,"offset":3269},"end":{"line":142,"column":10,"offset":3278},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">DAO</code>","position":{"start":{"line":142,"column":10,"offset":3278},"end":{"line":142,"column":15,"offset":3283},"indent":[]}},{"type":"text","value":" 메소드마다 새로운 ","position":{"start":{"line":142,"column":15,"offset":3283},"end":{"line":142,"column":26,"offset":3294},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">StatementStrategy</code>","position":{"start":{"line":142,"column":26,"offset":3294},"end":{"line":142,"column":45,"offset":3313},"indent":[]}},{"type":"text","value":" 구현 클래스를 만들어야 합니다.","position":{"start":{"line":142,"column":45,"offset":3313},"end":{"line":142,"column":63,"offset":3331},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3269},"end":{"line":142,"column":63,"offset":3331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"해결 방법은 ","position":{"start":{"line":144,"column":1,"offset":3333},"end":{"line":144,"column":8,"offset":3340},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">익명 클래스</code>","position":{"start":{"line":144,"column":8,"offset":3340},"end":{"line":144,"column":16,"offset":3348},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":144,"column":16,"offset":3348},"end":{"line":144,"column":20,"offset":3352},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">람다</code>","position":{"start":{"line":144,"column":20,"offset":3352},"end":{"line":144,"column":24,"offset":3356},"indent":[]}},{"type":"text","value":"를 활용해 문제점을 해결할 수 있습니다.","position":{"start":{"line":144,"column":24,"offset":3356},"end":{"line":144,"column":46,"offset":3378},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3333},"end":{"line":144,"column":46,"offset":3378},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"람다를 활용한 예제","position":{"start":{"line":146,"column":3,"offset":3382},"end":{"line":146,"column":13,"offset":3392},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":3380},"end":{"line":146,"column":15,"offset":3394},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":3380},"end":{"line":146,"column":15,"offset":3394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Java 8버전에서 제공되는 ","position":{"start":{"line":148,"column":1,"offset":3396},"end":{"line":148,"column":17,"offset":3412},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">람다</code>","position":{"start":{"line":148,"column":17,"offset":3412},"end":{"line":148,"column":21,"offset":3416},"indent":[]}},{"type":"text","value":"를 사용하려면 인터페이스는 하나의 추상 메소드를 가지는 인터페이스로 정의해야합니다.","position":{"start":{"line":148,"column":21,"offset":3416},"end":{"line":148,"column":67,"offset":3462},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":3396},"end":{"line":148,"column":67,"offset":3462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"위와 같이 하나의 추상 메소드 가지는 인터페이스를 ","position":{"start":{"line":150,"column":1,"offset":3464},"end":{"line":150,"column":29,"offset":3492},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">함수형 인터페이스</code>","position":{"start":{"line":150,"column":29,"offset":3492},"end":{"line":150,"column":40,"offset":3503},"indent":[]}},{"type":"text","value":"라고 부릅니다.","position":{"start":{"line":150,"column":40,"offset":3503},"end":{"line":150,"column":48,"offset":3511},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":3464},"end":{"line":150,"column":48,"offset":3511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"추가적으로 ","position":{"start":{"line":152,"column":1,"offset":3513},"end":{"line":152,"column":7,"offset":3519},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">@FunctionalInterface</code>","position":{"start":{"line":152,"column":7,"offset":3519},"end":{"line":152,"column":29,"offset":3541},"indent":[]}},{"type":"text","value":"라는 어노테이션이 있는데, 함수형 인터페이스를 명시적으로 컴파일러에게 알려 함수형 인터페이스의 조건을 위반하면 컴파일러는 예러를 발생시킵니다.","position":{"start":{"line":152,"column":29,"offset":3541},"end":{"line":152,"column":108,"offset":3620},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":3513},"end":{"line":152,"column":108,"offset":3620},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StatementStrategy</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">PreparedStatement</span> <span class=\"token function\">makePreparedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":154,"column":1,"offset":3622},"end":{"line":159,"column":4,"offset":3783},"indent":[1,1,1,1,1]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">jdbcContextWithStatementStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":161,"column":1,"offset":3785},"end":{"line":167,"column":4,"offset":3976},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#템플릿과-콜백","title":null,"children":[],"data":{"hProperties":{"aria-label":"템플릿과 콜백 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"템플릿과 콜백","position":{"start":{"line":169,"column":4,"offset":3981},"end":{"line":169,"column":11,"offset":3988},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":3978},"end":{"line":169,"column":11,"offset":3988},"indent":[]},"data":{"id":"템플릿과-콜백","htmlAttributes":{"id":"템플릿과-콜백"},"hProperties":{"id":"템플릿과-콜백","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"지금까지 만든 코드는 ","position":{"start":{"line":171,"column":1,"offset":3990},"end":{"line":171,"column":13,"offset":4002},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략 패턴</code>","position":{"start":{"line":171,"column":13,"offset":4002},"end":{"line":171,"column":20,"offset":4009},"indent":[]}},{"type":"text","value":"이 적용되었다고 말할 수 있습니다.","position":{"start":{"line":171,"column":20,"offset":4009},"end":{"line":171,"column":39,"offset":4028},"indent":[]}},{"type":"break","position":{"start":{"line":171,"column":39,"offset":4028},"end":{"line":172,"column":1,"offset":4031},"indent":[1]}},{"type":"text","value":"위의 코드들 처럼 복잡하지만 바뀌지 않는 일정한 패턴을 갖는 작업 흐름이 존재하고 그중 일부만 자주 바꿔서 사용해야하는 경우에 적합한 구조입니다.","position":{"start":{"line":172,"column":1,"offset":4031},"end":{"line":172,"column":82,"offset":4112},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":3990},"end":{"line":172,"column":82,"offset":4112},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"전략 패턴의 기본 구조에 익명 내부 클래스 , 람다를 활용한 방식을 스프링에서는 ","position":{"start":{"line":174,"column":1,"offset":4114},"end":{"line":174,"column":46,"offset":4159},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿/콜백</code>","position":{"start":{"line":174,"column":46,"offset":4159},"end":{"line":174,"column":54,"offset":4167},"indent":[]}},{"type":"text","value":" 패턴이라고 부릅니다.","position":{"start":{"line":174,"column":54,"offset":4167},"end":{"line":174,"column":66,"offset":4179},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":4114},"end":{"line":174,"column":66,"offset":4179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"전략 패턴의 컨텍스트를 ","position":{"start":{"line":176,"column":1,"offset":4181},"end":{"line":176,"column":14,"offset":4194},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿</code>","position":{"start":{"line":176,"column":14,"offset":4194},"end":{"line":176,"column":19,"offset":4199},"indent":[]}},{"type":"text","value":"이라하고 익명 클래스, 람다로 만들어지는 오브젝트를 ","position":{"start":{"line":176,"column":19,"offset":4199},"end":{"line":176,"column":48,"offset":4228},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">콜백</code>","position":{"start":{"line":176,"column":48,"offset":4228},"end":{"line":176,"column":52,"offset":4232},"indent":[]}},{"type":"text","value":"이라고 부릅니다.","position":{"start":{"line":176,"column":52,"offset":4232},"end":{"line":176,"column":61,"offset":4241},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":4181},"end":{"line":176,"column":61,"offset":4241},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#템플릿콜백의-동작-방식","title":null,"children":[],"data":{"hProperties":{"aria-label":"템플릿콜백의 동작 방식 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"템플릿/콜백의 동작 방식","position":{"start":{"line":178,"column":6,"offset":4248},"end":{"line":178,"column":19,"offset":4261},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":4243},"end":{"line":178,"column":19,"offset":4261},"indent":[]},"data":{"id":"템플릿콜백의-동작-방식","htmlAttributes":{"id":"템플릿콜백의-동작-방식"},"hProperties":{"id":"템플릿콜백의-동작-방식","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">클라이언트</code>","position":{"start":{"line":180,"column":1,"offset":4263},"end":{"line":180,"column":8,"offset":4270},"indent":[]}},{"type":"text","value":"의 역할은 템플릿 안에서 실행될 로직을 담은 콜백 오브젝트를 생성하고 콜백이 참조할 정보를 제공합니다.","position":{"start":{"line":180,"column":8,"offset":4270},"end":{"line":180,"column":65,"offset":4327},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":4263},"end":{"line":180,"column":65,"offset":4327},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">템플릿</code>","position":{"start":{"line":182,"column":1,"offset":4329},"end":{"line":182,"column":6,"offset":4334},"indent":[]}},{"type":"text","value":"은 내부에서 생성한 참조 정보를 가지고 콜백 오브젝트의 메소드를 호출합니다.","position":{"start":{"line":182,"column":6,"offset":4334},"end":{"line":182,"column":48,"offset":4376},"indent":[]}},{"type":"break","position":{"start":{"line":182,"column":48,"offset":4376},"end":{"line":183,"column":1,"offset":4379},"indent":[1]}},{"type":"text","value":"그 후, 콜백은 클라이언트의 정보와 메소드를 가지고 작업을 수행 한 뒤 다시 템플릿에게 결과를 반환합니다.","position":{"start":{"line":183,"column":1,"offset":4379},"end":{"line":183,"column":60,"offset":4438},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":4329},"end":{"line":183,"column":60,"offset":4438},"indent":[1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">템플릿</code>","position":{"start":{"line":185,"column":1,"offset":4440},"end":{"line":185,"column":6,"offset":4445},"indent":[]}},{"type":"text","value":"은 콜백이 반환한 정보를 가지고 작업을 마저 수행합니다.","position":{"start":{"line":185,"column":6,"offset":4445},"end":{"line":185,"column":37,"offset":4476},"indent":[]}},{"type":"break","position":{"start":{"line":185,"column":37,"offset":4476},"end":{"line":186,"column":1,"offset":4479},"indent":[1]}},{"type":"text","value":"경우에 따라 최종 결과를 클라이언트에게 반환합니다.","position":{"start":{"line":186,"column":1,"offset":4479},"end":{"line":186,"column":29,"offset":4507},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":4440},"end":{"line":186,"column":29,"offset":4507},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#템플릿콜백의-응용","title":null,"children":[],"data":{"hProperties":{"aria-label":"템플릿콜백의 응용 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"템플릿/콜백의 응용","position":{"start":{"line":188,"column":6,"offset":4514},"end":{"line":188,"column":16,"offset":4524},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":4509},"end":{"line":188,"column":16,"offset":4524},"indent":[]},"data":{"id":"템플릿콜백의-응용","htmlAttributes":{"id":"템플릿콜백의-응용"},"hProperties":{"id":"템플릿콜백의-응용","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"스프링 개발자라면 ","position":{"start":{"line":190,"column":1,"offset":4526},"end":{"line":190,"column":11,"offset":4536},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿/콜백</code>","position":{"start":{"line":190,"column":11,"offset":4536},"end":{"line":190,"column":19,"offset":4544},"indent":[]}},{"type":"text","value":" 기능을 잘 사용하거나 필요한 곳이 있으면 직접 만들어 사용할 수 있어야 한다고 합니다.","position":{"start":{"line":190,"column":19,"offset":4544},"end":{"line":190,"column":68,"offset":4593},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":4526},"end":{"line":190,"column":68,"offset":4593},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"고정된 작업 흐름을 갖고 있으면서 여러 곳에서 자주 반복되는 코드가 있다면, 중복되는 코드를 분리할 방법을 생각해보는 습관을 가지면 좋습니다.","position":{"start":{"line":192,"column":1,"offset":4595},"end":{"line":192,"column":80,"offset":4674},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":4595},"end":{"line":192,"column":80,"offset":4674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"먼저 ","position":{"start":{"line":194,"column":1,"offset":4676},"end":{"line":194,"column":4,"offset":4679},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">메소드로 분리</code>","position":{"start":{"line":194,"column":4,"offset":4679},"end":{"line":194,"column":13,"offset":4688},"indent":[]}},{"type":"text","value":"해보고 인터페이스를 사용하여 ","position":{"start":{"line":194,"column":13,"offset":4688},"end":{"line":194,"column":29,"offset":4704},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">전략 패턴</code>","position":{"start":{"line":194,"column":29,"offset":4704},"end":{"line":194,"column":36,"offset":4711},"indent":[]}},{"type":"text","value":"을 적용해 DI로 의존 관계를 관리하도록 만듭니다.","position":{"start":{"line":194,"column":36,"offset":4711},"end":{"line":194,"column":64,"offset":4739},"indent":[]}},{"type":"break","position":{"start":{"line":194,"column":64,"offset":4739},"end":{"line":195,"column":1,"offset":4742},"indent":[1]}},{"type":"text","value":"그런데, 여기서 바뀌는 부분이 한 어플리케이션 안에서 동시에 ","position":{"start":{"line":195,"column":1,"offset":4742},"end":{"line":195,"column":35,"offset":4776},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">여러 종류</code>","position":{"start":{"line":195,"column":35,"offset":4776},"end":{"line":195,"column":42,"offset":4783},"indent":[]}},{"type":"text","value":"로 만들어 질 수 있다면 이번엔 ","position":{"start":{"line":195,"column":42,"offset":4783},"end":{"line":195,"column":60,"offset":4801},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿/콜백</code>","position":{"start":{"line":195,"column":60,"offset":4801},"end":{"line":195,"column":68,"offset":4809},"indent":[]}},{"type":"text","value":" 패턴을 적용할 수 있습니다.","position":{"start":{"line":195,"column":68,"offset":4809},"end":{"line":195,"column":84,"offset":4825},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":4676},"end":{"line":195,"column":84,"offset":4825},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"다음 파일을 읽어 수를 더하거나 곱하는 예제를 보고 더 깊게 이해해봅시다 !","position":{"start":{"line":197,"column":1,"offset":4827},"end":{"line":197,"column":43,"offset":4869},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":4827},"end":{"line":197,"column":43,"offset":4869},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"더하기 메소드","position":{"start":{"line":199,"column":3,"offset":4873},"end":{"line":199,"column":10,"offset":4880},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":4871},"end":{"line":199,"column":12,"offset":4882},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":4871},"end":{"line":199,"column":12,"offset":4882},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">calSum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedReader</span> br<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">==</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        sum <span class=\"token operator\">+=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 바뀌는 코드</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":201,"column":1,"offset":4884},"end":{"line":210,"column":4,"offset":5107},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"곱하기 메소드","position":{"start":{"line":212,"column":3,"offset":5111},"end":{"line":212,"column":10,"offset":5118},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":5109},"end":{"line":212,"column":12,"offset":5120},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":5109},"end":{"line":212,"column":12,"offset":5120},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">calMultiply</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedReader</span> br<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> multiply <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">==</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        multiply <span class=\"token operator\">*=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 바뀌는 코드</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> multiply<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":214,"column":1,"offset":5122},"end":{"line":223,"column":4,"offset":5365},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"조금만 살펴봐도 두 코드가 아주 유사함을 알 수 있습니다.","position":{"start":{"line":225,"column":1,"offset":5367},"end":{"line":225,"column":33,"offset":5399},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":5367},"end":{"line":225,"column":33,"offset":5399},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"결과를 저장할 변수를 초기화","position":{"start":{"line":227,"column":4,"offset":5404},"end":{"line":227,"column":19,"offset":5419},"indent":[]}}],"position":{"start":{"line":227,"column":4,"offset":5404},"end":{"line":227,"column":19,"offset":5419},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":5401},"end":{"line":227,"column":19,"offset":5419},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"BufferedReader를 이용해 파일을 한줄 한줄 읽습니다.","position":{"start":{"line":228,"column":4,"offset":5423},"end":{"line":228,"column":39,"offset":5458},"indent":[]}}],"position":{"start":{"line":228,"column":4,"offset":5423},"end":{"line":228,"column":39,"offset":5458},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":5420},"end":{"line":228,"column":39,"offset":5458},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"변수에 계산한 결과를 저장합니다.","position":{"start":{"line":229,"column":4,"offset":5462},"end":{"line":229,"column":22,"offset":5480},"indent":[]}}],"position":{"start":{"line":229,"column":4,"offset":5462},"end":{"line":229,"column":22,"offset":5480},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":5459},"end":{"line":229,"column":22,"offset":5480},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"파일을 다 읽었으면 결과를 리턴합니다.","position":{"start":{"line":230,"column":4,"offset":5484},"end":{"line":230,"column":25,"offset":5505},"indent":[]}}],"position":{"start":{"line":230,"column":4,"offset":5484},"end":{"line":230,"column":25,"offset":5505},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":5481},"end":{"line":230,"column":25,"offset":5505},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":5401},"end":{"line":230,"column":25,"offset":5505},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"템플릿과 콜백을 찾아낼때는 변하는 코드의 경계를 찾고 그 경계를 사이에 두고 주고 받는 일정한 정보가 있는지 확인하면 됩니다.","position":{"start":{"line":232,"column":1,"offset":5507},"end":{"line":232,"column":71,"offset":5577},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":5507},"end":{"line":232,"column":71,"offset":5577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"여기서 바뀌는 코드는 단 한줄입니다.","position":{"start":{"line":234,"column":1,"offset":5579},"end":{"line":234,"column":21,"offset":5599},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":5579},"end":{"line":234,"column":21,"offset":5599},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"바뀌는 코드(콜백)을 인터페이스로 정의합니다.","position":{"start":{"line":236,"column":1,"offset":5601},"end":{"line":236,"column":26,"offset":5626},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":5601},"end":{"line":236,"column":26,"offset":5626},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"라인별 작업을 정의한 인터페이스","position":{"start":{"line":238,"column":3,"offset":5630},"end":{"line":238,"column":20,"offset":5647},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5628},"end":{"line":238,"column":22,"offset":5649},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5628},"end":{"line":238,"column":22,"offset":5649},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@FunctionalInterface</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LineCallback</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Integer</span> <span class=\"token function\">doSomethingWithLine</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> line<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":240,"column":1,"offset":5651},"end":{"line":245,"column":4,"offset":5788},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"LineCallback을 사용하는 템플릿","position":{"start":{"line":247,"column":3,"offset":5792},"end":{"line":247,"column":25,"offset":5814},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5790},"end":{"line":247,"column":27,"offset":5816},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5790},"end":{"line":247,"column":27,"offset":5816},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">lineReadTemplate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filepath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">LineCallback</span> callback<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> initVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n        br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Integer</span> res <span class=\"token operator\">=</span> initVal<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">==</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            res <span class=\"token operator\">=</span> callback<span class=\"token punctuation\">.</span><span class=\"token function\">doSomethingWithLine</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":249,"column":1,"offset":5818},"end":{"line":264,"column":4,"offset":6260},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"템플릿을 사용하도록 수정한 calSum() 메서드","position":{"start":{"line":266,"column":3,"offset":6264},"end":{"line":266,"column":30,"offset":6291},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6262},"end":{"line":266,"column":32,"offset":6293},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6262},"end":{"line":266,"column":32,"offset":6293},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">calSum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">LineCallback</span> sumCallback <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> value <span class=\"token operator\">+</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">lineReadTemplate</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">,</span> sumCallback<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":268,"column":1,"offset":6295},"end":{"line":273,"column":4,"offset":6505},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#제네릭스를-활용한-콜백-인터페이스","title":null,"children":[],"data":{"hProperties":{"aria-label":"제네릭스를 활용한 콜백 인터페이스 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"제네릭스를 활용한 콜백 인터페이스","position":{"start":{"line":275,"column":6,"offset":6512},"end":{"line":275,"column":24,"offset":6530},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6507},"end":{"line":275,"column":24,"offset":6530},"indent":[]},"data":{"id":"제네릭스를-활용한-콜백-인터페이스","htmlAttributes":{"id":"제네릭스를-활용한-콜백-인터페이스"},"hProperties":{"id":"제네릭스를-활용한-콜백-인터페이스","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">제네릭</code>","position":{"start":{"line":277,"column":1,"offset":6532},"end":{"line":277,"column":6,"offset":6537},"indent":[]}},{"type":"text","value":"을 사용하면 좀 더 강력한 ","position":{"start":{"line":277,"column":6,"offset":6537},"end":{"line":277,"column":21,"offset":6552},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">템플릿/콜백</code>","position":{"start":{"line":277,"column":21,"offset":6552},"end":{"line":277,"column":29,"offset":6560},"indent":[]}},{"type":"text","value":" 구조를 만들 수 있습니다.","position":{"start":{"line":277,"column":29,"offset":6560},"end":{"line":277,"column":44,"offset":6575},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":6532},"end":{"line":277,"column":44,"offset":6575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"위의 예제는 결과가 ","position":{"start":{"line":279,"column":1,"offset":6577},"end":{"line":279,"column":12,"offset":6588},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Integer</code>","position":{"start":{"line":279,"column":12,"offset":6588},"end":{"line":279,"column":21,"offset":6597},"indent":[]}},{"type":"text","value":"로 고정되어 있지만 ","position":{"start":{"line":279,"column":21,"offset":6597},"end":{"line":279,"column":32,"offset":6608},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">제네릭</code>","position":{"start":{"line":279,"column":32,"offset":6608},"end":{"line":279,"column":37,"offset":6613},"indent":[]}},{"type":"text","value":"을 사용하면 다양한 오브젝트를 지원할 수 있습니다.","position":{"start":{"line":279,"column":37,"offset":6613},"end":{"line":279,"column":65,"offset":6641},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":6577},"end":{"line":279,"column":65,"offset":6641},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LineCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">T</span> <span class=\"token function\">doSomethingWithLine</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> line<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":281,"column":1,"offset":6643},"end":{"line":285,"column":4,"offset":6750},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":286,"column":1,"offset":6751}}}}