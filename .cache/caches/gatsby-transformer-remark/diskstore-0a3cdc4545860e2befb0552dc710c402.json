{"expireTime":9007200939154745000,"key":"transformer-remark-markdown-ast-cd199da437e678658271cecf6c4aba47-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#-컴포지트-패턴이란","title":null,"children":[],"data":{"hProperties":{"aria-label":" 컴포지트 패턴이란 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🌲 컴포지트 패턴이란","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":16,"offset":16},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16},"indent":[]},"data":{"id":"-컴포지트-패턴이란","htmlAttributes":{"id":"-컴포지트-패턴이란"},"hProperties":{"id":"-컴포지트-패턴이란","style":"position:relative;"}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"객체들을 트리 구조로 구성하여 부분과 전체를 나타내는 계층구조로 만들수 있다.\n클라이언트에서 개별 객체와 다른 객체들오 구성된 복합 객체(composite)를 똑같은 방법으로 다룰 수 있다.","position":{"start":{"line":4,"column":3,"offset":20},"end":{"line":5,"column":65,"offset":128},"indent":[3]}}],"position":{"start":{"line":4,"column":3,"offset":20},"end":{"line":5,"column":65,"offset":128},"indent":[3]}}],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":5,"column":65,"offset":128},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"식당 메뉴를 예로들어 생각해본다면\n중첩되어 있는 메뉴 그룹과 메뉴 항목을 똑같은 구조 내에서 처리할수 있게끔 하는 것이다.","position":{"start":{"line":7,"column":1,"offset":130},"end":{"line":8,"column":50,"offset":198},"indent":[1]}}],"position":{"start":{"line":7,"column":1,"offset":130},"end":{"line":8,"column":50,"offset":198},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"메뉴와 메뉴항목을 같은 구조에 집어넣어서 ","position":{"start":{"line":10,"column":1,"offset":200},"end":{"line":10,"column":24,"offset":223},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"부분-전체 계층구조","position":{"start":{"line":10,"column":26,"offset":225},"end":{"line":10,"column":36,"offset":235},"indent":[]}}],"position":{"start":{"line":10,"column":24,"offset":223},"end":{"line":10,"column":38,"offset":237},"indent":[]}},{"type":"text","value":"를 생성할수 있다.","position":{"start":{"line":10,"column":38,"offset":237},"end":{"line":10,"column":48,"offset":247},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":200},"end":{"line":10,"column":48,"offset":247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이런 복합구조를 사용하면 복합 객체와 개별 객체에 대해 구분없이 똑같은 작업을 적용할 수 있다.","position":{"start":{"line":12,"column":1,"offset":249},"end":{"line":12,"column":54,"offset":302},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":249},"end":{"line":12,"column":54,"offset":302},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":14,"column":1,"offset":304},"end":{"line":14,"column":4,"offset":307},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#️-컴포지트-패턴의-이해","title":null,"children":[],"data":{"hProperties":{"aria-label":"️ 컴포지트 패턴의 이해 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"⛵️ 컴포지트 패턴의 이해","position":{"start":{"line":16,"column":4,"offset":312},"end":{"line":16,"column":18,"offset":326},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":309},"end":{"line":16,"column":18,"offset":326},"indent":[]},"data":{"id":"️-컴포지트-패턴의-이해","htmlAttributes":{"id":"️-컴포지트-패턴의-이해"},"hProperties":{"id":"️-컴포지트-패턴의-이해","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/55419159/141273718-978b7d56-3eb8-496d-99cb-367e5a2380b6.png","alt":"image","position":{"start":{"line":18,"column":1,"offset":328},"end":{"line":18,"column":112,"offset":439},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":328},"end":{"line":18,"column":112,"offset":439},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#-활용-예시","title":null,"children":[],"data":{"hProperties":{"aria-label":" 활용 예시 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🚀 활용 예시","position":{"start":{"line":20,"column":5,"offset":445},"end":{"line":20,"column":13,"offset":453},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":441},"end":{"line":20,"column":13,"offset":453},"indent":[]},"data":{"id":"-활용-예시","htmlAttributes":{"id":"-활용-예시"},"hProperties":{"id":"-활용-예시","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"컴포지트 패턴을 메뉴에 적용시켜본다면…","position":{"start":{"line":22,"column":2,"offset":456},"end":{"line":22,"column":25,"offset":479},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":455},"end":{"line":22,"column":26,"offset":480},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":455},"end":{"line":22,"column":26,"offset":480},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"우선 구성요소 ","position":{"start":{"line":24,"column":1,"offset":482},"end":{"line":24,"column":9,"offset":490},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"인터페이스를 만드는 것","position":{"start":{"line":24,"column":11,"offset":492},"end":{"line":24,"column":23,"offset":504},"indent":[]}}],"position":{"start":{"line":24,"column":9,"offset":490},"end":{"line":24,"column":25,"offset":506},"indent":[]}},{"type":"text","value":"부터 시작해보자.","position":{"start":{"line":24,"column":25,"offset":506},"end":{"line":24,"column":34,"offset":515},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":482},"end":{"line":24,"column":34,"offset":515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이 인터페이스는 메뉴와 메뉴 항목 모두에 적용되는 ","position":{"start":{"line":26,"column":1,"offset":517},"end":{"line":26,"column":29,"offset":545},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"공통 인터페이스","position":{"start":{"line":26,"column":31,"offset":547},"end":{"line":26,"column":39,"offset":555},"indent":[]}}],"position":{"start":{"line":26,"column":29,"offset":545},"end":{"line":26,"column":41,"offset":557},"indent":[]}},{"type":"text","value":" 역할을 하며, 이 인터페이스가 있어야만 그 들을 ","position":{"start":{"line":26,"column":41,"offset":557},"end":{"line":26,"column":69,"offset":585},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"똑같은 방법","position":{"start":{"line":26,"column":71,"offset":587},"end":{"line":26,"column":77,"offset":593},"indent":[]}}],"position":{"start":{"line":26,"column":69,"offset":585},"end":{"line":26,"column":79,"offset":595},"indent":[]}},{"type":"text","value":"으로 처리할 수 있다. ","position":{"start":{"line":26,"column":79,"offset":595},"end":{"line":26,"column":92,"offset":608},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":517},"end":{"line":26,"column":92,"offset":608},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"즉 메뉴와 메뉴 항목에 대해서 같은 메소드를 호출 할 수 있게 된다.","position":{"start":{"line":28,"column":1,"offset":610},"end":{"line":28,"column":39,"offset":648},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":610},"end":{"line":28,"column":39,"offset":648},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/55419159/141273915-f2bb7cba-e951-4955-92e0-2ab3eb8ed03a.png","alt":"image","position":{"start":{"line":30,"column":1,"offset":650},"end":{"line":30,"column":112,"offset":761},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":650},"end":{"line":30,"column":112,"offset":761},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#component-추상클래스-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"component 추상클래스 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Component</code>","position":{"start":{"line":32,"column":6,"offset":768},"end":{"line":32,"column":17,"offset":779},"indent":[]}},{"type":"text","value":" 추상클래스 구현","position":{"start":{"line":32,"column":17,"offset":779},"end":{"line":32,"column":26,"offset":788},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":763},"end":{"line":32,"column":26,"offset":788},"indent":[]},"data":{"id":"component-추상클래스-구현","htmlAttributes":{"id":"component-추상클래스-구현"},"hProperties":{"id":"component-추상클래스-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuComponent</span> menuComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuComponent</span> menuComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token function\">getChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isVegetarian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":34,"column":1,"offset":790},"end":{"line":69,"column":4,"offset":1645},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#component-를-상속받는-leaf-객체-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"component 를 상속받는 leaf 객체 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Component</code>","position":{"start":{"line":71,"column":6,"offset":1652},"end":{"line":71,"column":17,"offset":1663},"indent":[]}},{"type":"text","value":" 를 상속받는 ","position":{"start":{"line":71,"column":17,"offset":1663},"end":{"line":71,"column":25,"offset":1671},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Leaf</code>","position":{"start":{"line":71,"column":25,"offset":1671},"end":{"line":71,"column":31,"offset":1677},"indent":[]}},{"type":"text","value":" 객체 구현","position":{"start":{"line":71,"column":31,"offset":1677},"end":{"line":71,"column":37,"offset":1683},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1647},"end":{"line":71,"column":37,"offset":1683},"indent":[]},"data":{"id":"component-를-상속받는-leaf-객체-구현","htmlAttributes":{"id":"component-를-상속받는-leaf-객체-구현"},"hProperties":{"id":"component-를-상속받는-leaf-객체-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuItem</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//MenuItem은 Leaf에 해당한다.</span>\n\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> vegetarian<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> vegetarian<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vegetarian <span class=\"token operator\">=</span> vegetarian<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isVegetarian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> vegetarian<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//중요 - Composite 객체에서 공유하게 된다.</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isVegetarian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(v)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":73,"column":1,"offset":1685},"end":{"line":111,"column":4,"offset":2584},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#component-를-상속받는-composite-객체-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"component 를 상속받는 composite 객체 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Component</code>","position":{"start":{"line":113,"column":6,"offset":2591},"end":{"line":113,"column":17,"offset":2602},"indent":[]}},{"type":"text","value":" 를 상속받는 ","position":{"start":{"line":113,"column":17,"offset":2602},"end":{"line":113,"column":25,"offset":2610},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Composite</code>","position":{"start":{"line":113,"column":25,"offset":2610},"end":{"line":113,"column":36,"offset":2621},"indent":[]}},{"type":"text","value":" 객체 구현","position":{"start":{"line":113,"column":36,"offset":2621},"end":{"line":113,"column":42,"offset":2627},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2586},"end":{"line":113,"column":42,"offset":2627},"indent":[]},"data":{"id":"component-를-상속받는-composite-객체-구현","htmlAttributes":{"id":"component-를-상속받는-composite-객체-구현"},"hProperties":{"id":"component-를-상속받는-composite-객체-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Menu</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Menucomponent</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Menucomponent</span><span class=\"token punctuation\">></span></span> menuComponents <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuComponent</span> menuComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        menuComponents<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>menuComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuComponent</span> menuComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        menuComponents<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>menuComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token function\">getChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> menuComponents<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> description<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//중요 - Leaf 객체에서 공유하게 된다.</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> menuComponents<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//Menu 정보 뿐아니라 Menu안의 아이템까지 출력</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">MenuComponent</span> menuComponent <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            menuComponent<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":115,"column":1,"offset":2629},"end":{"line":158,"column":4,"offset":3812},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#client-객체-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"client 객체 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Client</code>","position":{"start":{"line":161,"column":6,"offset":3820},"end":{"line":161,"column":14,"offset":3828},"indent":[]}},{"type":"text","value":" 객체 구현","position":{"start":{"line":161,"column":14,"offset":3828},"end":{"line":161,"column":20,"offset":3834},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3815},"end":{"line":161,"column":20,"offset":3834},"indent":[]},"data":{"id":"client-객체-구현","htmlAttributes":{"id":"client-객체-구현"},"hProperties":{"id":"client-객체-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Waitress</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">MenuComponent</span> allMenus<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Waitress</span><span class=\"token punctuation\">(</span>menuComponent allMenus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>allMenus <span class=\"token operator\">=</span> allMenus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":163,"column":1,"offset":3836},"end":{"line":176,"column":4,"offset":4052},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#테스트","title":null,"children":[],"data":{"hProperties":{"aria-label":"테스트 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"테스트","position":{"start":{"line":179,"column":6,"offset":4060},"end":{"line":179,"column":9,"offset":4063},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":4055},"end":{"line":179,"column":9,"offset":4063},"indent":[]},"data":{"id":"테스트","htmlAttributes":{"id":"테스트"},"hProperties":{"id":"테스트","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuTestDrive</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">MenuComponent</span> pancakeHouseMenu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"펜케이크 하우스 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"아침 메뉴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MenuComponent</span> dinerMenu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"객체마을 식당 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"점심 메뉴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MenuComponent</span> cafeMenu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"카페 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"저녁 메뉴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MenuComponent</span> dessertMenu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"디저트 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"디저트를 즐겨 보세요\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MenuComponent</span> allMenus <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"전체 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"전체 메뉴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pancakeHouseMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>dinerMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>cafeMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        dinerMenu<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">menuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"파스타\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"마리나라 소스 스파게티.\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.89</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dinerMenu<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>dessertMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        dessertMenu<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">menuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"애플 파이\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"바삭바삭한 크러스트에 바닐라아이스크림이\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Waitress</span> waitress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Waitress</span><span class=\"token punctuation\">(</span>allMenus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        waitress<span class=\"token punctuation\">.</span><span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":181,"column":1,"offset":4065},"end":{"line":204,"column":4,"offset":4879},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":206,"column":1,"offset":4881},"end":{"line":206,"column":4,"offset":4884},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#-컴포지트패턴-vs-단일역할원칙","title":null,"children":[],"data":{"hProperties":{"aria-label":" 컴포지트패턴 vs 단일역할원칙 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🧨 컴포지트패턴 vs 단일역할원칙","position":{"start":{"line":208,"column":4,"offset":4889},"end":{"line":208,"column":23,"offset":4908},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":4886},"end":{"line":208,"column":23,"offset":4908},"indent":[]},"data":{"id":"-컴포지트패턴-vs-단일역할원칙","htmlAttributes":{"id":"-컴포지트패턴-vs-단일역할원칙"},"hProperties":{"id":"-컴포지트패턴-vs-단일역할원칙","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"한 클래스에서 한 역할만 맡아야 한다고 했는데, \n여기서는 ","position":{"start":{"line":210,"column":1,"offset":4910},"end":{"line":211,"column":6,"offset":4943},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"계층구조를 관리하는 역할","position":{"start":{"line":211,"column":8,"offset":4945},"end":{"line":211,"column":21,"offset":4958},"indent":[]}}],"position":{"start":{"line":211,"column":6,"offset":4943},"end":{"line":211,"column":23,"offset":4960},"indent":[]}},{"type":"text","value":"과 ","position":{"start":{"line":211,"column":23,"offset":4960},"end":{"line":211,"column":25,"offset":4962},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"메뉴관련 작업을 처리하는 역할","position":{"start":{"line":211,"column":27,"offset":4964},"end":{"line":211,"column":43,"offset":4980},"indent":[]}}],"position":{"start":{"line":211,"column":25,"offset":4962},"end":{"line":211,"column":45,"offset":4982},"indent":[]}},{"type":"text","value":" 두 가지를 처리하고 있다","position":{"start":{"line":211,"column":45,"offset":4982},"end":{"line":211,"column":59,"offset":4996},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":4910},"end":{"line":211,"column":59,"offset":4996},"indent":[1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"컴포지트 패턴은 ","position":{"start":{"line":213,"column":3,"offset":5000},"end":{"line":213,"column":12,"offset":5009},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"단일 역할 원칙","position":{"start":{"line":213,"column":14,"offset":5011},"end":{"line":213,"column":22,"offset":5019},"indent":[]}}],"position":{"start":{"line":213,"column":12,"offset":5009},"end":{"line":213,"column":24,"offset":5021},"indent":[]}},{"type":"text","value":"을 깨면서, 대신에 ","position":{"start":{"line":213,"column":24,"offset":5021},"end":{"line":213,"column":35,"offset":5032},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"투명성을 확보","position":{"start":{"line":213,"column":37,"offset":5034},"end":{"line":213,"column":44,"offset":5041},"indent":[]}}],"position":{"start":{"line":213,"column":35,"offset":5032},"end":{"line":213,"column":46,"offset":5043},"indent":[]}},{"type":"text","value":"하기 위한 패턴이다.","position":{"start":{"line":213,"column":46,"offset":5043},"end":{"line":213,"column":57,"offset":5054},"indent":[]}}],"position":{"start":{"line":213,"column":3,"offset":5000},"end":{"line":213,"column":57,"offset":5054},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":4998},"end":{"line":213,"column":57,"offset":5054},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":216,"column":1,"offset":5057},"end":{"line":216,"column":4,"offset":5060},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#-컴포지트--이터레이터-패턴-적용","title":null,"children":[],"data":{"hProperties":{"aria-label":" 컴포지트  이터레이터 패턴 적용 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🛠 컴포지트 + 이터레이터 패턴 적용","position":{"start":{"line":218,"column":4,"offset":5065},"end":{"line":218,"column":25,"offset":5086},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":5062},"end":{"line":218,"column":25,"offset":5086},"indent":[]},"data":{"id":"-컴포지트--이터레이터-패턴-적용","htmlAttributes":{"id":"-컴포지트--이터레이터-패턴-적용"},"hProperties":{"id":"-컴포지트--이터레이터-패턴-적용","style":"position:relative;"}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#컴포지트-패턴-내에서-이터레이터-패턴을-활용해보자","title":null,"children":[],"data":{"hProperties":{"aria-label":"컴포지트 패턴 내에서 이터레이터 패턴을 활용해보자 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"컴포지트 패턴 내에서 이터레이터 패턴을 활용해보자","position":{"start":{"line":220,"column":5,"offset":5092},"end":{"line":220,"column":32,"offset":5119},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":5088},"end":{"line":220,"column":32,"offset":5119},"indent":[]},"data":{"id":"컴포지트-패턴-내에서-이터레이터-패턴을-활용해보자","htmlAttributes":{"id":"컴포지트-패턴-내에서-이터레이터-패턴을-활용해보자"},"hProperties":{"id":"컴포지트-패턴-내에서-이터레이터-패턴을-활용해보자","style":"position:relative;"}}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#composite-leaf-객체에-이터레이터-적용","title":null,"children":[],"data":{"hProperties":{"aria-label":"composite leaf 객체에 이터레이터 적용 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Composite</code>","position":{"start":{"line":222,"column":6,"offset":5126},"end":{"line":222,"column":17,"offset":5137},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":222,"column":17,"offset":5137},"end":{"line":222,"column":19,"offset":5139},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Leaf</code>","position":{"start":{"line":222,"column":19,"offset":5139},"end":{"line":222,"column":25,"offset":5145},"indent":[]}},{"type":"text","value":" 객체에 이터레이터 적용","position":{"start":{"line":222,"column":25,"offset":5145},"end":{"line":222,"column":38,"offset":5158},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":5121},"end":{"line":222,"column":38,"offset":5158},"indent":[]},"data":{"id":"composite-leaf-객체에-이터레이터-적용","htmlAttributes":{"id":"composite-leaf-객체에-이터레이터-적용"},"hProperties":{"id":"composite-leaf-객체에-이터레이터-적용","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Menu</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//나머지 코드는 그대로</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CompositeIterator</span><span class=\"token punctuation\">(</span>menucomponents<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuItem</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//나머지 코드는 그대로</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//널 반복자.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":224,"column":1,"offset":5160},"end":{"line":240,"column":4,"offset":5522},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#nulliterator-란","title":null,"children":[],"data":{"hProperties":{"aria-label":"nulliterator 란 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">NullIterator</code>","position":{"start":{"line":242,"column":6,"offset":5529},"end":{"line":242,"column":20,"offset":5543},"indent":[]}},{"type":"text","value":" 란","position":{"start":{"line":242,"column":20,"offset":5543},"end":{"line":242,"column":22,"offset":5545},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":5524},"end":{"line":242,"column":22,"offset":5545},"indent":[]},"data":{"id":"nulliterator-란","htmlAttributes":{"id":"nulliterator-란"},"hProperties":{"id":"nulliterator-란","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">MenuItem</code>","position":{"start":{"line":244,"column":1,"offset":5547},"end":{"line":244,"column":11,"offset":5557},"indent":[]}},{"type":"text","value":"에 대해서는 반복작업을 할 대상이없다. 그래서 ","position":{"start":{"line":244,"column":11,"offset":5557},"end":{"line":244,"column":37,"offset":5583},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createIterator()</code>","position":{"start":{"line":244,"column":37,"offset":5583},"end":{"line":244,"column":55,"offset":5601},"indent":[]}},{"type":"text","value":"메소드를 구현하기가 애매해진다.","position":{"start":{"line":244,"column":55,"offset":5601},"end":{"line":244,"column":72,"offset":5618},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":5547},"end":{"line":244,"column":72,"offset":5618},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"그냥 null을 리턴한다. 그렇다면 클라이언트에서 리턴값이 널인지 아닌지를 판단하기 위해 조건문을 써야하는 단점이있다. ","position":{"start":{"line":246,"column":4,"offset":5623},"end":{"line":246,"column":71,"offset":5690},"indent":[]}}],"position":{"start":{"line":246,"column":4,"offset":5623},"end":{"line":246,"column":71,"offset":5690},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":5620},"end":{"line":246,"column":71,"offset":5690},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"hasNext()가 호출되었을 때 무조건 false 를 리턴하는 반복자를 리턴한다.","position":{"start":{"line":247,"column":4,"offset":5694},"end":{"line":247,"column":50,"offset":5740},"indent":[]}}],"position":{"start":{"line":247,"column":4,"offset":5694},"end":{"line":247,"column":50,"offset":5740},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5691},"end":{"line":247,"column":50,"offset":5740},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":5620},"end":{"line":247,"column":50,"offset":5740},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"두번째 방법은 여전히 반복자를 리턴할수 있기 때문에 클라이언트에서는 리턴된 객체가 ","position":{"start":{"line":249,"column":1,"offset":5742},"end":{"line":249,"column":47,"offset":5788},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"널 객체인지에 대해 신경 쓸 필요가 없다.","position":{"start":{"line":249,"column":49,"offset":5790},"end":{"line":249,"column":72,"offset":5813},"indent":[]}}],"position":{"start":{"line":249,"column":47,"offset":5788},"end":{"line":249,"column":74,"offset":5815},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":5742},"end":{"line":249,"column":74,"offset":5815},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이렇게 아무일도 하지 않는 반복자를 ","position":{"start":{"line":251,"column":1,"offset":5817},"end":{"line":251,"column":21,"offset":5837},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">NullIterator</code>","position":{"start":{"line":251,"column":21,"offset":5837},"end":{"line":251,"column":35,"offset":5851},"indent":[]}},{"type":"text","value":"라고 부른다.","position":{"start":{"line":251,"column":35,"offset":5851},"end":{"line":251,"column":42,"offset":5858},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":5817},"end":{"line":251,"column":42,"offset":5858},"indent":[]}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NullIterator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":253,"column":1,"offset":5860},"end":{"line":270,"column":4,"offset":6170},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#iterator-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"iterator 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Iterator</code>","position":{"start":{"line":272,"column":6,"offset":6177},"end":{"line":272,"column":16,"offset":6187},"indent":[]}},{"type":"text","value":" 구현","position":{"start":{"line":272,"column":16,"offset":6187},"end":{"line":272,"column":19,"offset":6190},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6172},"end":{"line":272,"column":19,"offset":6190},"indent":[]},"data":{"id":"iterator-구현","htmlAttributes":{"id":"iterator-구현"},"hProperties":{"id":"iterator-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CompositeIterator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Iterator</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">Stack</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> stack <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Stack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CompositeIterator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Iterator</span> iterator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuComponent</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">MenuComponent</span> component <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>component <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Menu</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Menu</span><span class=\"token punctuation\">)</span> component<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> component<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupporttedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":274,"column":1,"offset":6192},"end":{"line":307,"column":4,"offset":7025},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#iterator-를-적용한-client-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"iterator 를 적용한 client 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">Iterator</code>","position":{"start":{"line":309,"column":6,"offset":7032},"end":{"line":309,"column":16,"offset":7042},"indent":[]}},{"type":"text","value":" 를 적용한 ","position":{"start":{"line":309,"column":16,"offset":7042},"end":{"line":309,"column":23,"offset":7049},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Client</code>","position":{"start":{"line":309,"column":23,"offset":7049},"end":{"line":309,"column":31,"offset":7057},"indent":[]}},{"type":"text","value":" 구현","position":{"start":{"line":309,"column":31,"offset":7057},"end":{"line":309,"column":34,"offset":7060},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":7027},"end":{"line":309,"column":34,"offset":7060},"indent":[]},"data":{"id":"iterator-를-적용한-client-구현","htmlAttributes":{"id":"iterator-를-적용한-client-구현"},"hProperties":{"id":"iterator-를-적용한-client-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Waitress</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">MenuComponent</span> allMenus<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Waitress</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuComponent</span> allMenus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>allMenus <span class=\"token operator\">=</span> allMenus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printVegetarianMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//이 메소드는 '채식메뉴 인 것'만 추려낸다</span>\n        <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuComponent</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> allMenus<span class=\"token punctuation\">.</span><span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Menucomponent</span> menuComponent <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>menuComponent<span class=\"token punctuation\">.</span><span class=\"token function\">isVegetarian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> menuComponent<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UnsupportedOpoerationException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":311,"column":1,"offset":7062},"end":{"line":335,"column":4,"offset":7689},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#try-문을-쓴-이유","title":null,"children":[],"data":{"hProperties":{"aria-label":"try 문을 쓴 이유 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"try 문을 쓴 이유","position":{"start":{"line":337,"column":5,"offset":7695},"end":{"line":337,"column":16,"offset":7706},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":7691},"end":{"line":337,"column":16,"offset":7706},"indent":[]},"data":{"id":"try-문을-쓴-이유","htmlAttributes":{"id":"try-문을-쓴-이유"},"hProperties":{"id":"try-문을-쓴-이유","style":"position:relative;"}}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위와 같이 ","position":{"start":{"line":339,"column":3,"offset":7710},"end":{"line":339,"column":9,"offset":7716},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">try/catch</code>","position":{"start":{"line":339,"column":9,"offset":7716},"end":{"line":339,"column":20,"offset":7727},"indent":[]}},{"type":"text","value":" 코드를 쓴이유는 ","position":{"start":{"line":339,"column":20,"offset":7727},"end":{"line":339,"column":30,"offset":7737},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">instanceof</code>","position":{"start":{"line":339,"column":30,"offset":7737},"end":{"line":339,"column":42,"offset":7749},"indent":[]}},{"type":"text","value":" 를 써서 실행중에 형식을 확인하여 ","position":{"start":{"line":339,"column":42,"offset":7749},"end":{"line":339,"column":62,"offset":7769},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isVegetarian()</code>","position":{"start":{"line":339,"column":62,"offset":7769},"end":{"line":339,"column":78,"offset":7785},"indent":[]}},{"type":"text","value":"을 호출할 수도 있다.\n하지만 그렇게하면 ","position":{"start":{"line":339,"column":78,"offset":7785},"end":{"line":340,"column":11,"offset":7808},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">Menu</code>","position":{"start":{"line":340,"column":11,"offset":7808},"end":{"line":340,"column":17,"offset":7814},"indent":[]}},{"type":"text","value":"와 ","position":{"start":{"line":340,"column":17,"offset":7814},"end":{"line":340,"column":19,"offset":7816},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">MenuItem</code>","position":{"start":{"line":340,"column":19,"offset":7816},"end":{"line":340,"column":29,"offset":7826},"indent":[]}},{"type":"text","value":"을 ","position":{"start":{"line":340,"column":29,"offset":7826},"end":{"line":340,"column":31,"offset":7828},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"똑같이 다루지 않게 되는 셈","position":{"start":{"line":340,"column":33,"offset":7830},"end":{"line":340,"column":48,"offset":7845},"indent":[]}}],"position":{"start":{"line":340,"column":31,"offset":7828},"end":{"line":340,"column":50,"offset":7847},"indent":[]}},{"type":"text","value":"이되어 ","position":{"start":{"line":340,"column":50,"offset":7847},"end":{"line":340,"column":54,"offset":7851},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"투명성","position":{"start":{"line":340,"column":56,"offset":7853},"end":{"line":340,"column":59,"offset":7856},"indent":[]}}],"position":{"start":{"line":340,"column":54,"offset":7851},"end":{"line":340,"column":61,"offset":7858},"indent":[]}},{"type":"text","value":"을 잃어버리게 된다.","position":{"start":{"line":340,"column":61,"offset":7858},"end":{"line":340,"column":72,"offset":7869},"indent":[]}}],"position":{"start":{"line":339,"column":3,"offset":7710},"end":{"line":340,"column":72,"offset":7869},"indent":[1]}}],"position":{"start":{"line":339,"column":1,"offset":7708},"end":{"line":341,"column":1,"offset":7870},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Menu</code>","position":{"start":{"line":342,"column":3,"offset":7873},"end":{"line":342,"column":9,"offset":7879},"indent":[]}},{"type":"text","value":" 의 ","position":{"start":{"line":342,"column":9,"offset":7879},"end":{"line":342,"column":12,"offset":7882},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">isVegetarian()</code>","position":{"start":{"line":342,"column":12,"offset":7882},"end":{"line":342,"column":28,"offset":7898},"indent":[]}},{"type":"text","value":"메소드에서 무조건 ","position":{"start":{"line":342,"column":28,"offset":7898},"end":{"line":342,"column":38,"offset":7908},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">false</code>","position":{"start":{"line":342,"column":38,"offset":7908},"end":{"line":342,"column":45,"offset":7915},"indent":[]}},{"type":"text","value":"를 리턴하도록 하는 방법도 있다. \n이렇게하면 코드도 간단해지고 ","position":{"start":{"line":342,"column":45,"offset":7915},"end":{"line":343,"column":17,"offset":7951},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"투명성도 계속 유지","position":{"start":{"line":343,"column":19,"offset":7953},"end":{"line":343,"column":29,"offset":7963},"indent":[]}}],"position":{"start":{"line":343,"column":17,"offset":7951},"end":{"line":343,"column":31,"offset":7965},"indent":[]}},{"type":"text","value":"할수 있다. ","position":{"start":{"line":343,"column":31,"offset":7965},"end":{"line":343,"column":38,"offset":7972},"indent":[]}}],"position":{"start":{"line":342,"column":3,"offset":7873},"end":{"line":343,"column":38,"offset":7972},"indent":[1]}}],"position":{"start":{"line":342,"column":1,"offset":7871},"end":{"line":344,"column":1,"offset":7973},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"하지만 위 예제에서는 ","position":{"start":{"line":345,"column":3,"offset":7976},"end":{"line":345,"column":15,"offset":7988},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Menu</code>","position":{"start":{"line":345,"column":15,"offset":7988},"end":{"line":345,"column":21,"offset":7994},"indent":[]}},{"type":"text","value":"에서는 그 메소드가 ","position":{"start":{"line":345,"column":21,"offset":7994},"end":{"line":345,"column":32,"offset":8005},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"지원되지 않는다는 것","position":{"start":{"line":345,"column":34,"offset":8007},"end":{"line":345,"column":45,"offset":8018},"indent":[]}}],"position":{"start":{"line":345,"column":32,"offset":8005},"end":{"line":345,"column":47,"offset":8020},"indent":[]}},{"type":"text","value":"을 분명하게 나타내기 위해서 사용되었다.","position":{"start":{"line":345,"column":47,"offset":8020},"end":{"line":345,"column":69,"offset":8042},"indent":[]}}],"position":{"start":{"line":345,"column":3,"offset":7976},"end":{"line":345,"column":69,"offset":8042},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":7974},"end":{"line":345,"column":69,"offset":8042},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":7708},"end":{"line":345,"column":69,"offset":8042},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":349,"column":1,"offset":8046}}}}