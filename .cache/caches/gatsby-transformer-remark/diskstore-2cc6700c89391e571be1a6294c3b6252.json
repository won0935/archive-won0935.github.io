{"expireTime":9007200896353687000,"key":"transformer-remark-markdown-toc-57591eb3cd67825a06cfcbadce6847bb-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-{\"heading\":null,\"maxDepth\":6,\"absolute\":true,\"pathToSlugField\":\"fields.slug\"}-","val":"<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#%EA%B0%9C%EC%9A%94\">개요</a></li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#1-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%BD%94%EB%93%9C%EC%9D%98-%EB%B6%84%EB%A6%AC\">1. 트랜잭션 코드의 분리</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#1-di%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%B6%84%EB%A6%AC\">1) DI를 이용한 클래스의 분리</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#2-%EB%B6%84%EB%A6%AC%EB%90%9C-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B8%B0%EB%8A%A5\">2) 분리된 트랜잭션 기능</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#3-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%A0%81%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-di-%EC%84%A4%EC%A0%95\">3) 트랜잭션 적용을 위한 DI 설정</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#4-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%B2%98%EB%A6%AC-%EC%BD%94%EB%93%9C-%EB%B6%84%EB%A6%AC%EC%9D%98-%EC%9E%A5%EC%A0%90\">4) 트랜잭션 처리 코드 분리의 장점</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#2-%EA%B3%A0%EB%A6%BD%EB%90%9C-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\">2. 고립된 단위 테스트</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%8C%80%EC%83%81-%EA%B3%A0%EB%A6%BD%EC%8B%9C%ED%82%A4%EA%B8%B0\">1) 테스트 대상 고립시키기</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#2-%EA%B3%A0%EB%A6%BD-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8C%85%EC%9D%98-%EC%9E%A5%EC%A0%90\">2) 고립 단위 테스팅의 장점</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#3-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%ED%86%B5%ED%95%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8\">3) 단위 테스트와 통합 테스트</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#4-%EB%AA%A9-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC\">4) 목 프레임워크</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#3-%EB%8B%A4%EC%9D%B4%EB%82%B4%EB%AF%B9-%ED%94%84%EB%A1%9D%EC%8B%9C%EC%99%80-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EB%B9%88\">3. 다이내믹 프록시와 팩토리 빈</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#1-%ED%94%84%EB%A1%9D%EC%8B%9C\">1) 프록시</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#2-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%8C%A8%ED%84%B4\">2) 데코레이터 패턴</a></li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#3-%ED%94%84%EB%A1%9D%EC%8B%9C-%ED%8C%A8%ED%84%B4\">3) 프록시 패턴</a></p>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#%ED%94%84%EB%A1%9D%EC%8B%9C-%EA%B5%AC%EC%84%B1%EA%B3%BC-%EC%97%AD%ED%95%A0\">프록시 구성과 역할</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%9E%91%EC%84%B1%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\">프록시 작성의 문제점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#4-%EB%8B%A4%EC%9D%B4%EB%82%B4%EB%AF%B9-%ED%94%84%EB%A1%9D%EC%8B%9C\">4) 다이내믹 프록시</a></p>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#%EB%8B%A4%EC%9D%B4%EB%82%B4%EB%AF%B9-%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%A0%81%EC%9A%A9\">다이내믹 프록시 적용</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#4-%EC%8A%A4%ED%94%84%EB%A7%81%EC%9D%98-%ED%94%84%EB%A1%9D%EC%8B%9C-%ED%8C%A9%ED%86%A0%EB%A6%AC-%EB%B9%88\">4. 스프링의 프록시 팩토리 빈</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#1-proxyfactorybean\">1) ProxyFactoryBean</a></p>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#methodlnterceptor-%EC%99%80-invocationhandler%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">Methodlnterceptor 와 InvocationHandler의 차이점</a></li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#proxyfactorybean-%EC%98%88%EC%A0%9C\">ProxyFactoryBean 예제</a></li>\n</ul>\n</li>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#2-%EC%96%B4%EB%93%9C%EB%B0%94%EC%9D%B4%EC%8A%A4--%ED%83%80%EA%B9%83%EC%9D%B4-%ED%95%84%EC%9A%94-%EC%97%86%EB%8A%94-%EC%88%9C%EC%88%98%ED%95%9C-%EB%B6%80%EA%B0%80%EA%B8%B0%EB%8A%A5\">2) 어드바이스 : 타깃이 필요 없는 순수한 부가기능</a></li>\n<li>\n<p><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#3-%ED%8F%AC%EC%9D%B8%ED%8A%B8%EC%BB%B7--%EB%B6%80%EA%B0%80%EA%B8%B0%EB%8A%A5-%EC%A0%81%EC%9A%A9-%EB%8C%80%EC%83%81-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%84%A0%EC%A0%95-%EB%B0%A9%EB%B2%95\">3) 포인트컷 : 부가기능 적용 대상 메소드 선정 방법</a></p>\n<ul>\n<li><a href=\"/category/study/toby-spring/aop/unit-test-and-proxy/#%EC%96%B4%EB%93%9C%EB%B0%94%EC%9D%B4%EC%8A%A4%EC%99%80-%ED%8F%AC%EC%9D%B8%ED%8A%B8%EC%BB%B7%EC%9D%98-%EC%9E%AC%EC%82%AC%EC%9A%A9\">어드바이스와 포인트컷의 재사용</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}