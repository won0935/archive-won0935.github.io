{"expireTime":9007200904680652000,"key":"transformer-remark-markdown-ast-adb95da7752493d4be54321b442771c3-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#-이터레이터-패턴이란","title":null,"children":[],"data":{"hProperties":{"aria-label":" 이터레이터 패턴이란 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🎛 이터레이터 패턴이란","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":17,"offset":18},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":17,"offset":18},"indent":[]},"data":{"id":"-이터레이터-패턴이란","htmlAttributes":{"id":"-이터레이터-패턴이란"},"hProperties":{"id":"-이터레이터-패턴이란","style":"position:relative;"}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"컬렉션 구현 방법을 ","position":{"start":{"line":5,"column":3,"offset":22},"end":{"line":5,"column":14,"offset":33},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"노출시키지 않으면서도","position":{"start":{"line":5,"column":16,"offset":35},"end":{"line":5,"column":27,"offset":46},"indent":[]}}],"position":{"start":{"line":5,"column":14,"offset":33},"end":{"line":5,"column":29,"offset":48},"indent":[]}},{"type":"text","value":", 그 집합체 안에 들어있는 ","position":{"start":{"line":5,"column":29,"offset":48},"end":{"line":5,"column":45,"offset":64},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"모든 항목에 접근할 수 있는 방법","position":{"start":{"line":5,"column":47,"offset":66},"end":{"line":5,"column":65,"offset":84},"indent":[]}}],"position":{"start":{"line":5,"column":45,"offset":64},"end":{"line":5,"column":67,"offset":86},"indent":[]}},{"type":"text","value":"을 제공한다.","position":{"start":{"line":5,"column":67,"offset":86},"end":{"line":5,"column":74,"offset":93},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":22},"end":{"line":5,"column":74,"offset":93},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":20},"end":{"line":5,"column":74,"offset":93},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"컬렉션 객체 안에 들어있는 모든 항목에 ","position":{"start":{"line":7,"column":1,"offset":95},"end":{"line":7,"column":23,"offset":117},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"접근하는 방식이 통일되어 있으면","position":{"start":{"line":7,"column":25,"offset":119},"end":{"line":7,"column":42,"offset":136},"indent":[]}}],"position":{"start":{"line":7,"column":23,"offset":117},"end":{"line":7,"column":44,"offset":138},"indent":[]}},{"type":"text","value":" 어떤 종류의 집합체에 대해서도 사용할 수 있는 다형적인 코드를 만들수 있다.","position":{"start":{"line":7,"column":44,"offset":138},"end":{"line":7,"column":87,"offset":181},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":95},"end":{"line":7,"column":87,"offset":181},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">이터레이터 패턴</code>","position":{"start":{"line":9,"column":1,"offset":183},"end":{"line":9,"column":11,"offset":193},"indent":[]}},{"type":"text","value":"을 사용하면 모든 항목에 일일이 접근하는 작업을 컬렉션 객체가 아닌 ","position":{"start":{"line":9,"column":11,"offset":193},"end":{"line":9,"column":49,"offset":231},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"반복자 객체","position":{"start":{"line":9,"column":51,"offset":233},"end":{"line":9,"column":57,"offset":239},"indent":[]}}],"position":{"start":{"line":9,"column":49,"offset":231},"end":{"line":9,"column":59,"offset":241},"indent":[]}},{"type":"text","value":"에서 맡게 된다. \n이렇게 하면 집합체의 인터페이스 및 구현이 간단해질 뿐 아니라, 집합체에서는 반복작업에서 손을 떼고 원래 자신이 할 일(객체 컬렉션 관리)에만 전념할 수 있다","position":{"start":{"line":9,"column":59,"offset":241},"end":{"line":10,"column":89,"offset":340},"indent":[1]}}],"position":{"start":{"line":9,"column":1,"offset":183},"end":{"line":10,"column":89,"offset":340},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":13,"column":1,"offset":343},"end":{"line":13,"column":4,"offset":346},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#-이터레이터-패턴의-이해","title":null,"children":[],"data":{"hProperties":{"aria-label":" 이터레이터 패턴의 이해 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🔎 이터레이터 패턴의 이해","position":{"start":{"line":15,"column":4,"offset":351},"end":{"line":15,"column":19,"offset":366},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":348},"end":{"line":15,"column":19,"offset":366},"indent":[]},"data":{"id":"-이터레이터-패턴의-이해","htmlAttributes":{"id":"-이터레이터-패턴의-이해"},"hProperties":{"id":"-이터레이터-패턴의-이해","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://user-images.githubusercontent.com/55419159/141257200-343f3e03-e28d-4be6-bc54-9f613d0aaf71.png","alt":"image","position":{"start":{"line":17,"column":1,"offset":368},"end":{"line":17,"column":112,"offset":479},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":368},"end":{"line":17,"column":112,"offset":479},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#-활용-예시","title":null,"children":[],"data":{"hProperties":{"aria-label":" 활용 예시 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🚀 활용 예시","position":{"start":{"line":20,"column":5,"offset":486},"end":{"line":20,"column":13,"offset":494},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":482},"end":{"line":20,"column":13,"offset":494},"indent":[]},"data":{"id":"-활용-예시","htmlAttributes":{"id":"-활용-예시"},"hProperties":{"id":"-활용-예시","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"두개의 서로 다른 식당이있고 각각의 식당에서 메뉴를 구현한다고 가정해보자","position":{"start":{"line":22,"column":2,"offset":497},"end":{"line":22,"column":42,"offset":537},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":496},"end":{"line":22,"column":43,"offset":538},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":496},"end":{"line":22,"column":43,"offset":538},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">java.util.Iterator</code>","position":{"start":{"line":24,"column":1,"offset":540},"end":{"line":24,"column":21,"offset":560},"indent":[]}},{"type":"text","value":" 인터페이스를 사용해서 ","position":{"start":{"line":24,"column":21,"offset":560},"end":{"line":24,"column":34,"offset":573},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Iterator</code>","position":{"start":{"line":24,"column":34,"offset":573},"end":{"line":24,"column":44,"offset":583},"indent":[]}},{"type":"text","value":"를 적용시켜보자.","position":{"start":{"line":24,"column":44,"offset":583},"end":{"line":24,"column":53,"offset":592},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":540},"end":{"line":24,"column":53,"offset":592},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#이터레이트-인터페이스","title":null,"children":[],"data":{"hProperties":{"aria-label":"이터레이트 인터페이스 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"이터레이트 인터페이스","position":{"start":{"line":27,"column":6,"offset":600},"end":{"line":27,"column":17,"offset":611},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":595},"end":{"line":27,"column":17,"offset":611},"indent":[]},"data":{"id":"이터레이트-인터페이스","htmlAttributes":{"id":"이터레이트-인터페이스"},"hProperties":{"id":"이터레이트-인터페이스","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":29,"column":1,"offset":613},"end":{"line":33,"column":4,"offset":698},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#인터페이스를-구현하는-객체-생성","title":null,"children":[],"data":{"hProperties":{"aria-label":"인터페이스를 구현하는 객체 생성 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"인터페이스를 구현하는 객체 생성","position":{"start":{"line":35,"column":6,"offset":705},"end":{"line":35,"column":23,"offset":722},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":700},"end":{"line":35,"column":23,"offset":722},"indent":[]},"data":{"id":"인터페이스를-구현하는-객체-생성","htmlAttributes":{"id":"인터페이스를-구현하는-객체-생성"},"hProperties":{"id":"인터페이스를-구현하는-객체-생성","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PancakeHouseMenu</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> menuItems<span class=\"token punctuation\">;</span> <span class=\"token comment\">//이 객체는 메뉴들이 ArrayList 이다</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PancakeHouseMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuItems <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"K&amp;B 팬케이크 세트\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"스크램블드 에그와 토스트가 곁들여진 펜케이크\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"레귤러 팬케이크 세트\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"달걀 후라이와 소시지가 곁들여진 펜케이크\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"블루베리 펜케이크\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"신선한 블루베리와 블루베리 시럽으로 만든 펜케이크\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.49</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"와플\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"와플, 취향에 따라 블루베리나 딸기를 얹을 수 있습니다.\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> vegetarian<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">MenuItem</span> menuItem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> vegetarian<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        menuItem<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getMenuItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> menuItems<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> menuItems<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ArrayList 컬렉션은 반복자를 리턴하는 iterator() 라는 메소드가 있음.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DinerMenu</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> MAX_ITEMS <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> numberOfItems <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> menuItems<span class=\"token punctuation\">;</span> <span class=\"token comment\">//이 객체는 메뉴들이 배열 이다</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DinerMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menuItems <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">[</span>MAX_ITEMS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"채식주의자용 BLT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"통밀 위에 (식물성)베이컨, 상추, 토마토를 얹은 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BLT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"통밀 위에 베이컨, 상추, 토마토를 얹은 메뉴\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"오늘의 스프\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"감자 샐러드를 곁들인 오늘의 스프\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.29</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"핫도그\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"사워크라우트, 갖은 양념, 양파, 치즈가 곁들여진 핫도그\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">additem</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> vegetarian<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">MenuItem</span> menuItem <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> vegetarian<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nemberOfItems <span class=\"token operator\">>=</span> MAX_ITEMS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"죄송합니다, 메뉴가 꽉 찼습니다. 더 이상 추가할 수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            menuItems<span class=\"token punctuation\">[</span>numberOfItems<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> menuItem<span class=\"token punctuation\">;</span>\n            numberOfItems <span class=\"token operator\">=</span> numberOfItems <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getMenuItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> menuItems<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DinerMenujIterator</span><span class=\"token punctuation\">(</span>menuItems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":37,"column":1,"offset":724},"end":{"line":99,"column":4,"offset":2789},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#javautiliterator-인터페이스를-사용해서-iterator-객체를-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"javautiliterator 인터페이스를 사용해서 iterator 객체를 구현 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"html","value":"<code class=\"language-text\">java.util.Iterator</code>","position":{"start":{"line":101,"column":6,"offset":2796},"end":{"line":101,"column":26,"offset":2816},"indent":[]}},{"type":"text","value":" 인터페이스를 사용해서 ","position":{"start":{"line":101,"column":26,"offset":2816},"end":{"line":101,"column":39,"offset":2829},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Iterator</code>","position":{"start":{"line":101,"column":39,"offset":2829},"end":{"line":101,"column":49,"offset":2839},"indent":[]}},{"type":"text","value":" 객체를 구현","position":{"start":{"line":101,"column":49,"offset":2839},"end":{"line":101,"column":56,"offset":2846},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2791},"end":{"line":101,"column":56,"offset":2846},"indent":[]},"data":{"id":"javautiliterator-인터페이스를-사용해서-iterator-객체를-구현","htmlAttributes":{"id":"javautiliterator-인터페이스를-사용해서-iterator-객체를-구현"},"hProperties":{"id":"javautiliterator-인터페이스를-사용해서-iterator-객체를-구현","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DinerMenuIterator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">Menuitem</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> position <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DinerMenuIterator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MenuItem</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">MenuItem</span> menuItem <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        position <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> menuItem<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">>=</span> list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span> list<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 반드시 기능을 제공하지 않아도됨 그렇다면 java.lang.UnsupportedOperationException을 던지도록 하면됨</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"next()가 한번도 호출되지 않음.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>position <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> position <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            list<span class=\"token punctuation\">[</span>list<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// PancakeHouseMenu 는 ArrayList안에 이미 Iterator 구현되어 있기 때문에 생략해도 된다.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":102,"column":1,"offset":2847},"end":{"line":137,"column":4,"offset":3836},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#클라이언트-객체에서의-활용","title":null,"children":[],"data":{"hProperties":{"aria-label":"클라이언트 객체에서의 활용 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"클라이언트 객체에서의 활용","position":{"start":{"line":139,"column":6,"offset":3843},"end":{"line":139,"column":20,"offset":3857},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":3838},"end":{"line":139,"column":20,"offset":3857},"indent":[]},"data":{"id":"클라이언트-객체에서의-활용","htmlAttributes":{"id":"클라이언트-객체에서의-활용"},"hProperties":{"id":"클라이언트-객체에서의-활용","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Waitress</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Menu</span><span class=\"token punctuation\">></span></span> menus<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Waitress</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Menu</span><span class=\"token punctuation\">></span></span> menus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>menus <span class=\"token operator\">=</span> menus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">Iterator</span> menuIterator <span class=\"token operator\">=</span> menus<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>menuIterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Menu</span> menu <span class=\"token operator\">=</span> menuIterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span>menu<span class=\"token punctuation\">.</span><span class=\"token function\">createIterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">></span></span> iterator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//클라이언트 객체에서의 반복작업이 매우 간단해졌다</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">MenuItem</span> menuItem <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":140,"column":1,"offset":3858},"end":{"line":166,"column":4,"offset":4587},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#테스트","title":null,"children":[],"data":{"hProperties":{"aria-label":"테스트 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"테스트","position":{"start":{"line":168,"column":6,"offset":4594},"end":{"line":168,"column":9,"offset":4597},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4589},"end":{"line":168,"column":9,"offset":4597},"indent":[]},"data":{"id":"테스트","htmlAttributes":{"id":"테스트"},"hProperties":{"id":"테스트","style":"position:relative;"}}},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuTestDrive</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Menu</span><span class=\"token punctuation\">></span></span> menuList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        menuList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PancakeHouseMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        menuList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DinerMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Waitress</span> waitress <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Waitress</span><span class=\"token punctuation\">(</span>menuList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        waitress<span class=\"token punctuation\">.</span><span class=\"token function\">printMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":169,"column":1,"offset":4598},"end":{"line":179,"column":4,"offset":4911},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"이제 ","position":{"start":{"line":181,"column":3,"offset":4915},"end":{"line":181,"column":6,"offset":4918},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"집합체 내","position":{"start":{"line":181,"column":8,"offset":4920},"end":{"line":181,"column":13,"offset":4925},"indent":[]}}],"position":{"start":{"line":181,"column":6,"offset":4918},"end":{"line":181,"column":15,"offset":4927},"indent":[]}},{"type":"text","value":"에서 어떤 식으로 일이 처리되는 지에 대해서 ","position":{"start":{"line":181,"column":15,"offset":4927},"end":{"line":181,"column":40,"offset":4952},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"전혀 모르는 상태","position":{"start":{"line":181,"column":42,"offset":4954},"end":{"line":181,"column":51,"offset":4963},"indent":[]}}],"position":{"start":{"line":181,"column":40,"offset":4952},"end":{"line":181,"column":53,"offset":4965},"indent":[]}},{"type":"text","value":"에서도 그 안에 들어있는 모든 항목들에 대해서 반복작업을 수행할수 있게 되었다.","position":{"start":{"line":181,"column":53,"offset":4965},"end":{"line":181,"column":97,"offset":5009},"indent":[]}}],"position":{"start":{"line":181,"column":3,"offset":4915},"end":{"line":181,"column":97,"offset":5009},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":4913},"end":{"line":181,"column":97,"offset":5009},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"집합체에서 내부 컬랙션과 관련된 기능과 반복자용 메소드 관련기능을 전부 구현하도록 했다면 어떨까?","position":{"start":{"line":183,"column":1,"offset":5011},"end":{"line":183,"column":55,"offset":5065},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":5011},"end":{"line":183,"column":55,"offset":5065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"우선 클래스에서 원래 그 클래스의 역할(집합체 관리) 외에 다른 역할(반복자 메소드)을 처리하도록 하면, 두 가지 이유로 인해 그 클래스가 바뀔 수 있게 된다.","position":{"start":{"line":185,"column":1,"offset":5067},"end":{"line":185,"column":90,"offset":5156},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":5067},"end":{"line":185,"column":90,"offset":5156},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"컬렉션이 어떤 이유로 인해 바뀌게 되면 그 클래스의 ","position":{"start":{"line":187,"column":4,"offset":5161},"end":{"line":187,"column":33,"offset":5190},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"소스코드","position":{"start":{"line":187,"column":35,"offset":5192},"end":{"line":187,"column":39,"offset":5196},"indent":[]}}],"position":{"start":{"line":187,"column":33,"offset":5190},"end":{"line":187,"column":41,"offset":5198},"indent":[]}},{"type":"text","value":"를 바꿔야 한다. ","position":{"start":{"line":187,"column":41,"offset":5198},"end":{"line":187,"column":51,"offset":5208},"indent":[]}}],"position":{"start":{"line":187,"column":4,"offset":5161},"end":{"line":187,"column":51,"offset":5208},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5158},"end":{"line":187,"column":51,"offset":5208},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"반복자 관련 기능","position":{"start":{"line":188,"column":6,"offset":5214},"end":{"line":188,"column":15,"offset":5223},"indent":[]}}],"position":{"start":{"line":188,"column":4,"offset":5212},"end":{"line":188,"column":17,"offset":5225},"indent":[]}},{"type":"text","value":"이 바뀌었을 때도 클래스가 바뀌여야 한다.","position":{"start":{"line":188,"column":17,"offset":5225},"end":{"line":188,"column":40,"offset":5248},"indent":[]}}],"position":{"start":{"line":188,"column":4,"offset":5212},"end":{"line":188,"column":40,"offset":5248},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5209},"end":{"line":188,"column":40,"offset":5248},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5158},"end":{"line":188,"column":40,"offset":5248},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":190,"column":1,"offset":5250},"end":{"line":190,"column":4,"offset":5253},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#-디자인-원칙","title":null,"children":[],"data":{"hProperties":{"aria-label":" 디자인 원칙 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"🛡 디자인 원칙","position":{"start":{"line":192,"column":4,"offset":5258},"end":{"line":192,"column":13,"offset":5267},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":5255},"end":{"line":192,"column":13,"offset":5267},"indent":[]},"data":{"id":"-디자인-원칙","htmlAttributes":{"id":"-디자인-원칙"},"hProperties":{"id":"-디자인-원칙","style":"position:relative;"}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"클래스를 바꾸는 이유는 ","position":{"start":{"line":194,"column":4,"offset":5272},"end":{"line":194,"column":17,"offset":5285},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"한 가지","position":{"start":{"line":194,"column":19,"offset":5287},"end":{"line":194,"column":23,"offset":5291},"indent":[]}}],"position":{"start":{"line":194,"column":17,"offset":5285},"end":{"line":194,"column":25,"offset":5293},"indent":[]}},{"type":"text","value":" 뿐이어야 한다.","position":{"start":{"line":194,"column":25,"offset":5293},"end":{"line":194,"column":34,"offset":5302},"indent":[]}}],"position":{"start":{"line":194,"column":3,"offset":5271},"end":{"line":194,"column":35,"offset":5303},"indent":[]}}],"position":{"start":{"line":194,"column":3,"offset":5271},"end":{"line":194,"column":35,"offset":5303},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":5269},"end":{"line":194,"column":35,"offset":5303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":196,"column":1,"offset":5305},"end":{"line":196,"column":2,"offset":5306},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"클래스를 고치는 것은 최대한 피해야 한다.","position":{"start":{"line":196,"column":4,"offset":5308},"end":{"line":196,"column":27,"offset":5331},"indent":[]}}],"position":{"start":{"line":196,"column":2,"offset":5306},"end":{"line":196,"column":29,"offset":5333},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":5305},"end":{"line":196,"column":29,"offset":5333},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" 때문에 코드를 변경할 만한 이유가 두가지가 되면 그만큼 그 클래스를 나중에 고쳐야 할 가능성이 커지게 될 뿐 아니라, 디자인에 있어서 두 가지 부분이 동시에 영향이 미치게 된다.","position":{"start":{"line":198,"column":1,"offset":5335},"end":{"line":198,"column":101,"offset":5435},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":5335},"end":{"line":198,"column":101,"offset":5435},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이 원칙에 따르면 ","position":{"start":{"line":200,"column":1,"offset":5438},"end":{"line":200,"column":11,"offset":5448},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"한 역할은 한 클래스에서만","position":{"start":{"line":200,"column":13,"offset":5450},"end":{"line":200,"column":27,"offset":5464},"indent":[]}}],"position":{"start":{"line":200,"column":11,"offset":5448},"end":{"line":200,"column":29,"offset":5466},"indent":[]}},{"type":"text","value":" 맡게 해야 한다.","position":{"start":{"line":200,"column":29,"offset":5466},"end":{"line":200,"column":39,"offset":5476},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":5438},"end":{"line":200,"column":39,"offset":5476},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":201,"column":1,"offset":5477}}}}