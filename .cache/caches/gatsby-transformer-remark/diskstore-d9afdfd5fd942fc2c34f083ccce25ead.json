{"expireTime":9007200896353687000,"key":"transformer-remark-markdown-ast-218c256830573006645e842b9f3f3a53-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"infoCustomBlock","children":[{"type":"infoCustomBlockHeading","data":{"hName":"div","hProperties":{"className":"custom-block-heading"}},"children":[{"type":"text","value":"LEVEL 3 - ‘네트워크’ 문제 보러 가기 !","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":28,"offset":28},"indent":[]}}]},{"type":"infoCustomBlockBody","data":{"hName":"div","hProperties":{"className":"custom-block-body"}},"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://programmers.co.kr/learn/courses/30/lessons/43162","children":[{"type":"text","value":"https://programmers.co.kr/learn/courses/30/lessons/43162","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}]}],"data":{"hName":"div","hProperties":{"className":["custom-block","info"]}},"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":59,"offset":98},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제-설명","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 설명 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제 설명","position":{"start":{"line":5,"column":4,"offset":103},"end":{"line":5,"column":9,"offset":108},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":100},"end":{"line":5,"column":9,"offset":108},"indent":[]},"data":{"id":"문제-설명","htmlAttributes":{"id":"문제-설명"},"hProperties":{"id":"문제-설명","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다.","position":{"start":{"line":7,"column":1,"offset":110},"end":{"line":7,"column":45,"offset":154},"indent":[]}},{"type":"break","position":{"start":{"line":7,"column":45,"offset":154},"end":{"line":8,"column":1,"offset":157},"indent":[1]}},{"type":"text","value":"예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다.","position":{"start":{"line":8,"column":1,"offset":157},"end":{"line":8,"column":106,"offset":262},"indent":[]}},{"type":"break","position":{"start":{"line":8,"column":106,"offset":262},"end":{"line":9,"column":1,"offset":265},"indent":[1]}},{"type":"text","value":"따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.","position":{"start":{"line":9,"column":1,"offset":265},"end":{"line":9,"column":45,"offset":309},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":110},"end":{"line":9,"column":45,"offset":309},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"컴퓨터의 개수 ","position":{"start":{"line":11,"column":1,"offset":311},"end":{"line":11,"column":9,"offset":319},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">n</code>","position":{"start":{"line":11,"column":9,"offset":319},"end":{"line":11,"column":12,"offset":322},"indent":[]}},{"type":"text","value":", 연결에 대한 정보가 담긴 2차원 배열 ","position":{"start":{"line":11,"column":12,"offset":322},"end":{"line":11,"column":35,"offset":345},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">computers</code>","position":{"start":{"line":11,"column":35,"offset":345},"end":{"line":11,"column":46,"offset":356},"indent":[]}},{"type":"text","value":"가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.","position":{"start":{"line":11,"column":46,"offset":356},"end":{"line":11,"column":101,"offset":411},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":311},"end":{"line":11,"column":101,"offset":411},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제-접근-방식","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 접근 방식 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제 접근 방식","position":{"start":{"line":13,"column":4,"offset":416},"end":{"line":13,"column":12,"offset":424},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":413},"end":{"line":13,"column":12,"offset":424},"indent":[]},"data":{"id":"문제-접근-방식","htmlAttributes":{"id":"문제-접근-방식"},"hProperties":{"id":"문제-접근-방식","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"문제를 보면 ","position":{"start":{"line":15,"column":1,"offset":426},"end":{"line":15,"column":8,"offset":433},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">DFS / BFS</code>","position":{"start":{"line":15,"column":8,"offset":433},"end":{"line":15,"column":19,"offset":444},"indent":[]}},{"type":"text","value":"로 분류 되어 있지만, 해당 문제는 ","position":{"start":{"line":15,"column":19,"offset":444},"end":{"line":15,"column":39,"offset":464},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Union-Find</code>","position":{"start":{"line":15,"column":39,"offset":464},"end":{"line":15,"column":51,"offset":476},"indent":[]}},{"type":"text","value":" 알고리즘을 적용하면 더 쉽게 풀 수 있다고 생각해서 ","position":{"start":{"line":15,"column":51,"offset":476},"end":{"line":15,"column":81,"offset":506},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Union-Find</code>","position":{"start":{"line":15,"column":81,"offset":506},"end":{"line":15,"column":93,"offset":518},"indent":[]}},{"type":"text","value":" 알고리즘을 적용하여 풀었습니다.","position":{"start":{"line":15,"column":93,"offset":518},"end":{"line":15,"column":111,"offset":536},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":426},"end":{"line":15,"column":111,"offset":536},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"같은 네트워크임을 파악하기 위해 ","position":{"start":{"line":17,"column":4,"offset":541},"end":{"line":17,"column":22,"offset":559},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":17,"column":22,"offset":559},"end":{"line":17,"column":25,"offset":562},"indent":[]}},{"type":"text","value":"번째 노드가 누구를 부모로 가리키는지 저장할 ","position":{"start":{"line":17,"column":25,"offset":562},"end":{"line":17,"column":50,"offset":587},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">parent</code>","position":{"start":{"line":17,"column":50,"offset":587},"end":{"line":17,"column":58,"offset":595},"indent":[]}},{"type":"text","value":" 배열과 ","position":{"start":{"line":17,"column":58,"offset":595},"end":{"line":17,"column":63,"offset":600},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Union-Find</code>","position":{"start":{"line":17,"column":63,"offset":600},"end":{"line":17,"column":75,"offset":612},"indent":[]}},{"type":"text","value":" 함수들을 작성합니다.","position":{"start":{"line":17,"column":75,"offset":612},"end":{"line":17,"column":87,"offset":624},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":541},"end":{"line":17,"column":87,"offset":624},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">Union-Find</code>","position":{"start":{"line":19,"column":6,"offset":631},"end":{"line":19,"column":18,"offset":643},"indent":[]}},{"type":"text","value":" 함수란 ?","position":{"start":{"line":19,"column":18,"offset":643},"end":{"line":19,"column":24,"offset":649},"indent":[]}}],"position":{"start":{"line":19,"column":6,"offset":631},"end":{"line":19,"column":24,"offset":649},"indent":[]}},{"type":"paragraph","children":[{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":21,"column":7,"offset":661},"end":{"line":21,"column":8,"offset":662},"indent":[]}}],"position":{"start":{"line":21,"column":6,"offset":660},"end":{"line":21,"column":9,"offset":663},"indent":[]}},{"type":"text","value":" 특정 노드의 부모를 반환하는 함수","position":{"start":{"line":21,"column":9,"offset":663},"end":{"line":21,"column":28,"offset":682},"indent":[]}},{"type":"break","position":{"start":{"line":21,"column":28,"offset":682},"end":{"line":22,"column":6,"offset":690},"indent":[6]}},{"type":"linkReference","identifier":"2","label":"2","referenceType":"shortcut","children":[{"type":"text","value":"2","position":{"start":{"line":22,"column":7,"offset":691},"end":{"line":22,"column":8,"offset":692},"indent":[]}}],"position":{"start":{"line":22,"column":6,"offset":690},"end":{"line":22,"column":9,"offset":693},"indent":[]}},{"type":"text","value":" 두 개의 노드를 연결하는 함수","position":{"start":{"line":22,"column":9,"offset":693},"end":{"line":22,"column":26,"offset":710},"indent":[]}}],"position":{"start":{"line":21,"column":6,"offset":660},"end":{"line":22,"column":26,"offset":710},"indent":[6]}}],"position":{"start":{"line":19,"column":4,"offset":629},"end":{"line":22,"column":26,"offset":710},"indent":[4,4,4]}}],"position":{"start":{"line":17,"column":1,"offset":538},"end":{"line":23,"column":1,"offset":711},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">computers</code>","position":{"start":{"line":24,"column":4,"offset":715},"end":{"line":24,"column":15,"offset":726},"indent":[]}},{"type":"text","value":" 배열을 돌면서 각 노드를 ","position":{"start":{"line":24,"column":15,"offset":726},"end":{"line":24,"column":30,"offset":741},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">union_parent</code>","position":{"start":{"line":24,"column":30,"offset":741},"end":{"line":24,"column":44,"offset":755},"indent":[]}},{"type":"text","value":" 함수로 같은 네트워크로 연결해줍니다.","position":{"start":{"line":24,"column":44,"offset":755},"end":{"line":24,"column":65,"offset":776},"indent":[]}}],"position":{"start":{"line":24,"column":4,"offset":715},"end":{"line":24,"column":65,"offset":776},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":712},"end":{"line":25,"column":1,"offset":777},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"마지막으로, ","position":{"start":{"line":26,"column":4,"offset":781},"end":{"line":26,"column":11,"offset":788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">parent</code>","position":{"start":{"line":26,"column":11,"offset":788},"end":{"line":26,"column":19,"offset":796},"indent":[]}},{"type":"text","value":" 배열을 돌면서 네트워크 개수를 파악한 뒤 return 합니다.","position":{"start":{"line":26,"column":19,"offset":796},"end":{"line":26,"column":54,"offset":831},"indent":[]}}],"position":{"start":{"line":26,"column":4,"offset":781},"end":{"line":26,"column":54,"offset":831},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":778},"end":{"line":26,"column":54,"offset":831},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":538},"end":{"line":26,"column":54,"offset":831},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#주의할-점","title":null,"children":[],"data":{"hProperties":{"aria-label":"주의할 점 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"주의할 점","position":{"start":{"line":28,"column":6,"offset":838},"end":{"line":28,"column":11,"offset":843},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":833},"end":{"line":28,"column":11,"offset":843},"indent":[]},"data":{"id":"주의할-점","htmlAttributes":{"id":"주의할-점"},"hProperties":{"id":"주의할-점","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"다음과 같이 ","position":{"start":{"line":30,"column":1,"offset":845},"end":{"line":30,"column":8,"offset":852},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">parent</code>","position":{"start":{"line":30,"column":8,"offset":852},"end":{"line":30,"column":16,"offset":860},"indent":[]}},{"type":"text","value":"에서 바로 네트워크 개수를 파악하려고 하면 ","position":{"start":{"line":30,"column":16,"offset":860},"end":{"line":30,"column":40,"offset":884},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">9번 테스트 케이스</code>","position":{"start":{"line":30,"column":40,"offset":884},"end":{"line":30,"column":52,"offset":896},"indent":[]}},{"type":"text","value":"가 틀리게 되니 주의하세요.","position":{"start":{"line":30,"column":52,"offset":896},"end":{"line":30,"column":67,"offset":911},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":845},"end":{"line":30,"column":67,"offset":911},"indent":[]}},{"type":"html","value":"<div class=\"gatsby-code-title\">Python</div>"},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> collections\nanswer <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\n\nanswer <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":32,"column":1,"offset":913},"end":{"line":37,"column":4,"offset":1031},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#접근이-비슷한-문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"접근이 비슷한 문제 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"접근이 비슷한 문제","position":{"start":{"line":39,"column":6,"offset":1038},"end":{"line":39,"column":16,"offset":1048},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1033},"end":{"line":39,"column":16,"offset":1048},"indent":[]},"data":{"id":"접근이-비슷한-문제","htmlAttributes":{"id":"접근이-비슷한-문제"},"hProperties":{"id":"접근이-비슷한-문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"프로그래머스의 ","position":{"start":{"line":41,"column":1,"offset":1050},"end":{"line":41,"column":9,"offset":1058},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">네트워크</code>","position":{"start":{"line":41,"column":9,"offset":1058},"end":{"line":41,"column":15,"offset":1064},"indent":[]}},{"type":"text","value":" 문제는 ","position":{"start":{"line":41,"column":15,"offset":1064},"end":{"line":41,"column":20,"offset":1069},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">섬 연결하기</code>","position":{"start":{"line":41,"column":20,"offset":1069},"end":{"line":41,"column":28,"offset":1077},"indent":[]}},{"type":"text","value":"와 접근이 특정 부분 유사한 문제이니 참고해주세요 !","position":{"start":{"line":41,"column":28,"offset":1077},"end":{"line":41,"column":57,"offset":1106},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1050},"end":{"line":41,"column":57,"offset":1106},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"/category/algorithm/greedy/island-connection","children":[{"type":"text","value":"[프로그래머스] 섬 연결하기 문제 보기","position":{"start":{"line":43,"column":4,"offset":1111},"end":{"line":43,"column":25,"offset":1132},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1110},"end":{"line":43,"column":72,"offset":1179},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1110},"end":{"line":43,"column":72,"offset":1179},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1108},"end":{"line":43,"column":72,"offset":1179},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이-코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 코드 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이 코드","position":{"start":{"line":45,"column":4,"offset":1184},"end":{"line":45,"column":9,"offset":1189},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1181},"end":{"line":45,"column":9,"offset":1189},"indent":[]},"data":{"id":"풀이-코드","htmlAttributes":{"id":"풀이-코드"},"hProperties":{"id":"풀이-코드","style":"position:relative;"}}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#python","title":null,"children":[],"data":{"hProperties":{"aria-label":"python permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Python","position":{"start":{"line":47,"column":6,"offset":1196},"end":{"line":47,"column":12,"offset":1202},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1191},"end":{"line":47,"column":12,"offset":1202},"indent":[]},"data":{"id":"python","htmlAttributes":{"id":"python"},"hProperties":{"id":"python","style":"position:relative;"}}},{"type":"html","value":"<div class=\"gatsby-code-title\">Python</div>"},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> computers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># [1] 특정 노드의 부모를 반환하는 함수</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> x\n        parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># [2] 두 개의 노드를 연결하는 함수</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">union_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> b<span class=\"token punctuation\">:</span> parent<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> parent<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a\n\n    parent <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        parent<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 노드를 연결하는 작업</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> j <span class=\"token keyword\">and</span> computers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                union_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># ** 주의 **</span>\n    <span class=\"token comment\"># 최종적으로 get_parent를 다시 해주면서 네트워크 개수 파악</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        parent<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        answer<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":49,"column":1,"offset":1204},"end":{"line":84,"column":4,"offset":2047},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#java","title":null,"children":[],"data":{"hProperties":{"aria-label":"java permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Java","position":{"start":{"line":86,"column":6,"offset":2054},"end":{"line":86,"column":10,"offset":2058},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2049},"end":{"line":86,"column":10,"offset":2058},"indent":[]},"data":{"id":"java","htmlAttributes":{"id":"java"},"hProperties":{"id":"java","style":"position:relative;"}}},{"type":"html","value":"<div class=\"gatsby-code-title\">Java</div>"},{"type":"html","lang":"java","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> computers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> parent <span class=\"token operator\">=</span> <span class=\"token class-name\">IntStream</span><span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IntStream to Array !</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">!=</span>j <span class=\"token operator\">&amp;&amp;</span> computers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">union_find</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// Set 자료구조</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> node <span class=\"token operator\">:</span> parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            answer<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// [1] 특정 노드의 부모를 반환하는 함수</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> parent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n        parent<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// [2] 두 개의 노드를 연결하는 함수</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">union_find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> parent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        a <span class=\"token operator\">=</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        b <span class=\"token operator\">=</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b<span class=\"token punctuation\">)</span> parent<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> parent<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":88,"column":1,"offset":2060},"end":{"line":125,"column":4,"offset":3100},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":125,"column":4,"offset":3100}}}}