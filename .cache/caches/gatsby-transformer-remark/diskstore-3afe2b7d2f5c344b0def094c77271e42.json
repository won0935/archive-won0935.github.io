{"expireTime":9007200903708498000,"key":"transformer-remark-markdown-html-c61ad26997853d83de3cb4578f53f06d-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<blockquote>\n<p>이번에 이직한 회사에서는 <code class=\"language-text\">Kotlin</code>으로 개발을 진행하고 있었다.</p>\n<p>따라서 기술에 대해 공부해보았다.</p>\n</blockquote>\n<hr>\n<h1 id=\"rest-아키텍처-원리\" style=\"position:relative;\"><a href=\"#rest-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%9B%90%EB%A6%AC\" aria-label=\"rest 아키텍처 원리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST 아키텍처 원리</h1>\n<ol>\n<li><strong>Client , Server</strong> : 클라이언트와 서버가 서로 독립적으로 <strong>분리되어져 있어야</strong> 한다.</li>\n<li><strong>Stateless</strong> : 요청에 대해서 클라이언트의 <strong>상태가 서버에 저장을 하지 않는다.</strong></li>\n<li><strong>캐시</strong> : 클라이언트는 서버의 응답을 <strong>캐시</strong> 할 수 있어야 한다.\n클라이언트가 캐시를 통해서 응답을 <strong>재사용</strong>할 수 있어야 하며, 이를 통해서 서버의\n부하를 낮춘다.</li>\n<li><strong>계층화(Layered System)</strong> : 서버와 클라이언트 사이에, 방화벽, 게이트웨이, Proxy\n등 <strong>다계층</strong> 형태를 구성할 수 있어야 하며, 확장 할 수 있어야 한다.</li>\n<li><strong>인터페이스 일관성</strong> : 아키텍처를 단순화시키고 작은 단위로 분리하여서,\n클라이언트, 서버가 <strong>독립적</strong>으로 개선될 수 있어야 한다.</li>\n<li><strong>Code On Demand(optional)</strong> : 자바 애플릿, 자바스크립트 플래시 등 특정기능을\n서버가 클라이언트에 코드를 전달하여 실행 할 수 있어야 한다.</li>\n</ol>\n<hr>\n<h1 id=\"rest-uri-설계-방법\" style=\"position:relative;\"><a href=\"#rest-uri-%EC%84%A4%EA%B3%84-%EB%B0%A9%EB%B2%95\" aria-label=\"rest uri 설계 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST URI 설계 방법</h1>\n<blockquote>\n<h4 id=\"url과-uri의-차이\" style=\"position:relative;\"><a href=\"#url%EA%B3%BC-uri%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"url과 uri의 차이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URL과 URI의 차이</h4>\n<ol>\n<li>\n<p><strong>URI(Uniform Resource Identifier)</strong> : 인터넷에서 특정 자원을 나타내는 주소값. 해당 값은 유일합니다.</p>\n<ul>\n<li>ex : <a href=\"https://www.foo.co.kr/resource/sample/1\">https://www.foo.co.kr/resource/sample/1</a></li>\n<li>response : sample1.pdf, sample2.pdf, sample.doc</li>\n</ul>\n</li>\n<li>\n<p><strong>URL(Uniform Resource Locator)</strong> : 인터넷 상에서의 자원, 파일이 어디에 위치하는지 식별 하는 주소</p>\n<ul>\n<li>ex : <a href=\"https://www.foo.co.kr/sample1.pdf\">https://www.foo.co.kr/sample1.pdf</a></li>\n</ul>\n</li>\n</ol>\n<p><strong>URL</strong>는 <strong>URI</strong>의 <strong>하위 개념</strong>입니다.</p>\n</blockquote>\n<ol>\n<li>슬래시 구분자 ( / )는 계층 관계를 나타내는 데 사용한다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6\">https://foo.co.kr/vehicles/suv/q6</a></li>\n<li>URI 마지막 문자로 ( / ) 는 포함하지 않는다.\n<del><a href=\"https://foo.co.kr/vehicles/suv/q6/\">https://foo.co.kr/vehicles/suv/q6/</a></del></li>\n<li>하이픈(-)은 URI가독성을 높이는데 사용한다\n<a href=\"https://foo.co.kr/vehicles/suv/q%60-%60series/6\">https://foo.co.kr/vehicles/suv/q`-`series/6</a></li>\n<li>밑줄(<em>)은 사용하지 않는다.\n~~<a href=\"https://foo.co.kr/vehicles/suv/q%60\">https://foo.co.kr/vehicles/suv/q`</a></em>`series/6~~</li>\n<li>URI 경로에는 소문자가 적합하다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6\">https://foo.co.kr/vehicles/suv/q6</a> ( O )\n<a href=\"https://Foo.co.kr/Vehicles/SUV/Q6\">https://Foo.co.kr/Vehicles/SUV/Q6</a> ( X )</li>\n<li>파일 확장자는 URI에 포함하지 않는다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6.jsp\">https://foo.co.kr/vehicles/suv/q6.jsp</a></li>\n<li>프로그래밍 언어에 의존적인 확장자를 사용하지 않는다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6.do\">https://foo.co.kr/vehicles/suv/q6.do</a></li>\n<li>구현에 의존적인 경로를 사용하지 않는다.\n<a href=\"https://foo.co.kr/servlet/vehicles/suv/q6\">https://foo.co.kr/servlet/vehicles/suv/q6</a></li>\n<li>세션 ID를 포함하지 않는다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6?session-id=abcdef\">https://foo.co.kr/vehicles/suv/q6?session-id=abcdef</a></li>\n<li>프로그래밍 언어의 Method명을 이용하지 않는다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6?action=intro\">https://foo.co.kr/vehicles/suv/q6?action=intro</a></li>\n<li>명사에 단수형 보다는 복수형을 사용해야 한다. 컬렉션에 대한 표현은 복수로 사용\n<a href=\"https://foo.co.kr/vehicles/suv/q6\">https://foo.co.kr/vehicles/suv/q6</a></li>\n<li>컨트롤러 이름으로는 동사나 동사구를 사용한다.\n<a href=\"https://foo.co.kr/vehicles/suv/q6/re-order\">https://foo.co.kr/vehicles/suv/q6/re-order</a></li>\n<li>경로 부분 중 변하는 부분은 유일한 값으로 대체 한다.\n<a href=\"https://foo.co.kr/vehicles/suv/q7/%7Bcar-id%7D/users/%7Buser-id%7D/release\">https://foo.co.kr/vehicles/suv/q7/{car-id}/users/{user-id}/release</a>\n<a href=\"https://foo.co.kr/vehicles/suv/q7/117/users/steve/release\">https://foo.co.kr/vehicles/suv/q7/117/users/steve/release</a></li>\n<li>CRUD 기능을 나타내는것은 URI에 사용하지 않는다.\nGET : <a href=\"https://foo.co.kr/vehicles/q7/delete/%7Bcar-id%7D\">https://foo.co.kr/vehicles/q7/delete/{car-id}</a> ( X )\nDELETE : <a href=\"https://foo.co.kr/vehicles/q7/%7Bcar-id%7D\">https://foo.co.kr/vehicles/q7/{car-id}</a> ( O )</li>\n<li>URI Query Parameter 디자인</li>\n<li>URI 쿼리 부분으로 컬렉션 결과에 대해서 필터링 할 수 있다.\n<a href=\"https://foo.co.kr/vehicles/suv?model=q7\">https://foo.co.kr/vehicles/suv?model=q7</a></li>\n<li>URI 쿼리는 컬렉션의 결과를 페이지로 구분하여 나타내는데\n사용한다.\n<a href=\"https://foo.co.kr/vehicles/suv?page=0&#x26;size=10&#x26;sort=asc\">https://foo.co.kr/vehicles/suv?page=0&#x26;size=10&#x26;sort=asc</a></li>\n<li>API에 있어서 서브 도메인은 일관성 있게 사용해야 한다.\n<a href=\"https://foo.co.kr\">https://foo.co.kr</a>\n<a href=\"https://api.foo.co.kr\">https://api.foo.co.kr</a></li>\n<li>클라이언트 개발자 포탈 서브 도메인은 일관성 있게 만든다.\n<a href=\"https://dev-api.foo.co.kr/vehicles/suv/q6\">https://dev-api.foo.co.kr/vehicles/suv/q6</a>\n<a href=\"https://developer-api.foo.co.kr/vehicles/suv/q6\">https://developer-api.foo.co.kr/vehicles/suv/q6</a></li>\n</ol>"}