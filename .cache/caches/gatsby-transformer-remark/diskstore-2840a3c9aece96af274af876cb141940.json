{"expireTime":9007200910964321000,"key":"transformer-remark-markdown-toc-7aa158796a7bd86e6f360f48af5f6094-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-{\"heading\":null,\"maxDepth\":6,\"absolute\":true,\"pathToSlugField\":\"fields.slug\"}-","val":"<ul>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#aopaspect-oriented-programming%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80\">AOP(Aspect Oriented Programming)란 무엇이며 왜 사용하는가</a></p>\n<ul>\n<li><a href=\"/category/spring/transactional-aop/#aop%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B0%9C%EB%85%90\">AOP의 주요 개념</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#spring-aop%EB%8A%94-%EC%99%9C-%ED%94%84%EB%A1%9D%EC%8B%9C-%EB%B0%A9%EC%8B%9D%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80\">Spring AOP는 왜 프록시 방식을 사용하는가?</a></p>\n<ul>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#jdk-proxy%EC%99%80-cglib-proxy\">JDK Proxy와 CGLib Proxy</a></p>\n<ul>\n<li><a href=\"/category/spring/transactional-aop/#jdk-proxy\">JDK Proxy</a></li>\n<li><a href=\"/category/spring/transactional-aop/#cglib-proxy\">CGLib Proxy</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#transactional%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%8A%94%EA%B0%80\">@Transactional은 어떻게 동작하는가</a></p>\n<ul>\n<li><a href=\"/category/spring/transactional-aop/#transactional%EC%9D%98-%EB%8F%99%EC%9E%91-%EC%88%9C%EC%84%9C\">@Transactional의 동작 순서</a></li>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#transactional-%EC%A0%81%EC%9A%A9-%EC%98%88%EC%A0%9C\">@Transactional 적용 예제</a></p>\n<ul>\n<li>\n<p><a href=\"/category/spring/transactional-aop/#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%80-%EA%B0%9D%EC%B2%B4-%EC%99%B8%EB%B6%80%EC%97%90%EC%84%9C-%EC%B2%98%EC%9D%8C-%EC%A7%84%EC%9E%85%ED%95%98%EB%8A%94-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A5%BC-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EB%8F%99%EC%9E%91%ED%95%9C%EB%8B%A4\">트랜잭션은 객체 외부에서 <strong>처음 진입하는 메서드를 기준</strong>으로 동작한다.</a></p>\n<ul>\n<li><a href=\"/category/spring/transactional-aop/#%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%B4-a-b-c%EC%9D%98-%EB%A9%94%EC%84%9C%EB%93%9C%EA%B0%80-%EC%9E%88%EB%8B%A4%EA%B3%A0-%EA%B0%80%EC%A0%95%ED%95%98%EC%9E%90\">다음과 같이 A, B, C의 메서드가 있다고 가정하자.</a></li>\n<li><a href=\"/category/spring/transactional-aop/#%EC%BF%A0%ED%8F%B0%EC%9D%84-3%EA%B0%9C%EB%A5%BC-%EB%AA%A8%EB%91%90-%EC%83%9D%EC%84%B1%ED%95%9C-%EB%92%A4-%EC%98%A4%EB%A5%98%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%96%88%EB%8B%A4%EA%B3%A0-%EA%B0%80%EC%A0%95%ED%95%B4%EB%B3%B4%EC%9E%90\">쿠폰을 3개를 모두 생성한 뒤 오류가 발생했다고 가정해보자.</a></li>\n<li><a href=\"/category/spring/transactional-aop/#%EC%A7%84%EC%9E%85-%EB%A9%94%EC%84%9C%EB%93%9C%EC%97%90-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B4-%EC%A0%81%EC%9A%A9%EB%90%98%EC%96%B4-%EC%9E%88%EC%A7%80-%EC%95%8A%EC%9D%80-%EA%B2%BD%EC%9A%B0-b-%EB%A9%94%EC%84%9C%EB%93%9C\">진입 메서드에 트랜잭션이 적용되어 있지 않은 경우 (B 메서드)</a></li>\n<li><a href=\"/category/spring/transactional-aop/#%EC%A7%84%EC%9E%85-%EB%A9%94%EC%84%9C%EB%93%9C%EC%97%90-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B4-%EC%A0%81%EC%9A%A9%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0-c-%EB%A9%94%EC%84%9C%EB%93%9C\">진입 메서드에 트랜잭션이 적용되어 있는 경우 (C 메서드)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/spring/transactional-aop/#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>"}