{"expireTime":9007200896353687000,"key":"transformer-remark-markdown-ast-7700e7b97ec4eee382feb93fa15f97a1-gatsby-remark-code-titlesgatsby-remark-embed-youtubegatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-custom-blocksgatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"infoCustomBlock","children":[{"type":"infoCustomBlockHeading","data":{"hName":"div","hProperties":{"className":"custom-block-heading"}},"children":[{"type":"text","value":"LEVEL 3 - ‘섬 연결하기’ 문제 보러 가기 !","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]}}]},{"type":"infoCustomBlockBody","data":{"hName":"div","hProperties":{"className":"custom-block-body"}},"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://programmers.co.kr/learn/courses/30/lessons/42861","children":[{"type":"text","value":"https://programmers.co.kr/learn/courses/30/lessons/42861","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":57,"offset":57},"indent":[]}}]}],"data":{"hName":"div","hProperties":{"className":["custom-block","info"]}},"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":59,"offset":100},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제-설명","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 설명 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제 설명","position":{"start":{"line":5,"column":4,"offset":105},"end":{"line":5,"column":9,"offset":110},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":102},"end":{"line":5,"column":9,"offset":110},"indent":[]},"data":{"id":"문제-설명","htmlAttributes":{"id":"문제-설명"},"hProperties":{"id":"문제-설명","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"n개의 섬 사이에 다리를 건설하는 비용(costs)이 주어질 때, 최소의 비용으로 모든 섬이 서로 통행 가능하도록 만들 때 필요한 최소 비용을 return 하도록 solution을 완성하세요.","position":{"start":{"line":7,"column":1,"offset":112},"end":{"line":7,"column":108,"offset":219},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":112},"end":{"line":7,"column":108,"offset":219},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"다리를 여러 번 건너더라도, 도달할 수만 있으면 통행 가능하다고 봅니다.","position":{"start":{"line":9,"column":1,"offset":221},"end":{"line":9,"column":41,"offset":261},"indent":[]}},{"type":"break","position":{"start":{"line":9,"column":41,"offset":261},"end":{"line":10,"column":1,"offset":264},"indent":[1]}},{"type":"text","value":"예를 들어 A 섬과 B 섬 사이에 다리가 있고, B 섬과 C 섬 사이에 다리가 있으면 A 섬과 C 섬은 서로 통행 가능합니다.","position":{"start":{"line":10,"column":1,"offset":264},"end":{"line":10,"column":71,"offset":334},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":221},"end":{"line":10,"column":71,"offset":334},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제-접근-방식","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 접근 방식 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제 접근 방식","position":{"start":{"line":12,"column":4,"offset":339},"end":{"line":12,"column":12,"offset":347},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":336},"end":{"line":12,"column":12,"offset":347},"indent":[]},"data":{"id":"문제-접근-방식","htmlAttributes":{"id":"문제-접근-방식"},"hProperties":{"id":"문제-접근-방식","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"그리디 알고리즘 분류에 있던 문제라 그래프 문제는 안나오는 줄 알았지만 !!","position":{"start":{"line":14,"column":1,"offset":349},"end":{"line":14,"column":43,"offset":391},"indent":[]}},{"type":"break","position":{"start":{"line":14,"column":43,"offset":391},"end":{"line":15,"column":1,"offset":394},"indent":[1]}},{"type":"text","value":"문제를 보고 바로 ","position":{"start":{"line":15,"column":1,"offset":394},"end":{"line":15,"column":11,"offset":404},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">그래프 + 그리디</code>","position":{"start":{"line":15,"column":11,"offset":404},"end":{"line":15,"column":22,"offset":415},"indent":[]}},{"type":"text","value":" 알고리즘 임을 깨달았습니다.","position":{"start":{"line":15,"column":22,"offset":415},"end":{"line":15,"column":38,"offset":431},"indent":[]}},{"type":"break","position":{"start":{"line":15,"column":38,"offset":431},"end":{"line":16,"column":1,"offset":434},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">크루스칼</code>","position":{"start":{"line":16,"column":1,"offset":434},"end":{"line":16,"column":7,"offset":440},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":16,"column":7,"offset":440},"end":{"line":16,"column":9,"offset":442},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">프림</code>","position":{"start":{"line":16,"column":9,"offset":442},"end":{"line":16,"column":13,"offset":446},"indent":[]}},{"type":"text","value":" 알고리즘 모두 ","position":{"start":{"line":16,"column":13,"offset":446},"end":{"line":16,"column":22,"offset":455},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">그래프 + 그리디</code>","position":{"start":{"line":16,"column":22,"offset":455},"end":{"line":16,"column":33,"offset":466},"indent":[]}},{"type":"text","value":" 알고리즘에 속한다는 것을.. 🤭","position":{"start":{"line":16,"column":33,"offset":466},"end":{"line":16,"column":52,"offset":485},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":349},"end":{"line":16,"column":52,"offset":485},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"해당 문제는 ","position":{"start":{"line":18,"column":1,"offset":487},"end":{"line":18,"column":8,"offset":494},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">최소 신장 트리(MST)</code>","position":{"start":{"line":18,"column":8,"offset":494},"end":{"line":18,"column":23,"offset":509},"indent":[]}},{"type":"text","value":"를 구현하는 문제입니다.","position":{"start":{"line":18,"column":23,"offset":509},"end":{"line":18,"column":36,"offset":522},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":487},"end":{"line":18,"column":36,"offset":522},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"즉, ","position":{"start":{"line":20,"column":1,"offset":524},"end":{"line":20,"column":4,"offset":527},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">크루스칼</code>","position":{"start":{"line":20,"column":4,"offset":527},"end":{"line":20,"column":10,"offset":533},"indent":[]}},{"type":"text","value":" 또는 ","position":{"start":{"line":20,"column":10,"offset":533},"end":{"line":20,"column":14,"offset":537},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">프림</code>","position":{"start":{"line":20,"column":14,"offset":537},"end":{"line":20,"column":18,"offset":541},"indent":[]}},{"type":"text","value":" 알고리즘으로 ","position":{"start":{"line":20,"column":18,"offset":541},"end":{"line":20,"column":26,"offset":549},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">최소 신장 트리</code>","position":{"start":{"line":20,"column":26,"offset":549},"end":{"line":20,"column":36,"offset":559},"indent":[]}},{"type":"text","value":"를 구현하기만 하면 해결 할 수 있는 문제입니다.","position":{"start":{"line":20,"column":36,"offset":559},"end":{"line":20,"column":63,"offset":586},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":524},"end":{"line":20,"column":63,"offset":586},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"저는 ","position":{"start":{"line":22,"column":1,"offset":588},"end":{"line":22,"column":4,"offset":591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">크루스칼</code>","position":{"start":{"line":22,"column":4,"offset":591},"end":{"line":22,"column":10,"offset":597},"indent":[]}},{"type":"text","value":" 알고리즘을 사용하여 문제를 접근했습니다.","position":{"start":{"line":22,"column":10,"offset":597},"end":{"line":22,"column":33,"offset":620},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":588},"end":{"line":22,"column":33,"offset":620},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#크루스칼-알고리즘이란-","title":null,"children":[],"data":{"hProperties":{"aria-label":"크루스칼 알고리즘이란  permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"크루스칼 알고리즘이란 ?","position":{"start":{"line":24,"column":6,"offset":627},"end":{"line":24,"column":19,"offset":640},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":622},"end":{"line":24,"column":19,"offset":640},"indent":[]},"data":{"id":"크루스칼-알고리즘이란-","htmlAttributes":{"id":"크루스칼-알고리즘이란-"},"hProperties":{"id":"크루스칼-알고리즘이란-","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"현재 상황 기준으로 가장 최적의 답을 선택해 문제를 푸는 ","position":{"start":{"line":26,"column":1,"offset":642},"end":{"line":26,"column":33,"offset":674},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">그리디 알고리즘</code>","position":{"start":{"line":26,"column":33,"offset":674},"end":{"line":26,"column":43,"offset":684},"indent":[]}},{"type":"text","value":"을 사용하여 모든 정점을 최소 비용으로 연결하는 최적 해답을 구하는 알고리즘입니다.","position":{"start":{"line":26,"column":43,"offset":684},"end":{"line":26,"column":89,"offset":730},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":642},"end":{"line":26,"column":89,"offset":730},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"link","url":"#크루스칼-구현-과정","title":null,"children":[],"data":{"hProperties":{"aria-label":"크루스칼 구현 과정 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"크루스칼 구현 과정","position":{"start":{"line":28,"column":6,"offset":737},"end":{"line":28,"column":16,"offset":747},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":732},"end":{"line":28,"column":16,"offset":747},"indent":[]},"data":{"id":"크루스칼-구현-과정","htmlAttributes":{"id":"크루스칼-구현-과정"},"hProperties":{"id":"크루스칼-구현-과정","style":"position:relative;"}}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"그래프의 간선들을 비용의 오름차순으로 정렬합니다.","position":{"start":{"line":30,"column":4,"offset":752},"end":{"line":30,"column":31,"offset":779},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":752},"end":{"line":30,"column":31,"offset":779},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"이는 비용이 가장 적은 간선을 선택하기 위함입니다.","position":{"start":{"line":32,"column":6,"offset":786},"end":{"line":32,"column":34,"offset":814},"indent":[]}}],"position":{"start":{"line":32,"column":6,"offset":786},"end":{"line":32,"column":34,"offset":814},"indent":[]}}],"position":{"start":{"line":32,"column":4,"offset":784},"end":{"line":32,"column":34,"offset":814},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":749},"end":{"line":33,"column":1,"offset":815},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"가장 비용이 작은 간선을 선택합니다.","position":{"start":{"line":34,"column":4,"offset":819},"end":{"line":34,"column":24,"offset":839},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":819},"end":{"line":34,"column":24,"offset":839},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"선택한 간선이 사이클을 이룬다면, 제외합니다.","position":{"start":{"line":36,"column":6,"offset":846},"end":{"line":36,"column":31,"offset":871},"indent":[]}}],"position":{"start":{"line":36,"column":6,"offset":846},"end":{"line":36,"column":31,"offset":871},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":844},"end":{"line":36,"column":31,"offset":871},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"사이클을 이루지 않는다면 해당 간선을 선택합니다.","position":{"start":{"line":37,"column":6,"offset":877},"end":{"line":37,"column":33,"offset":904},"indent":[]}}],"position":{"start":{"line":37,"column":6,"offset":877},"end":{"line":37,"column":33,"offset":904},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":875},"end":{"line":37,"column":33,"offset":904},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":844},"end":{"line":37,"column":33,"offset":904},"indent":[4]}}],"position":{"start":{"line":34,"column":1,"offset":816},"end":{"line":38,"column":1,"offset":905},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"최종적으로 선택한 간선의 가중치를 모두 합하여 반환합니다.","position":{"start":{"line":39,"column":4,"offset":909},"end":{"line":39,"column":36,"offset":941},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":909},"end":{"line":39,"column":36,"offset":941},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":906},"end":{"line":39,"column":36,"offset":941},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":749},"end":{"line":39,"column":36,"offset":941},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이-코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 코드 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이 코드","position":{"start":{"line":41,"column":4,"offset":946},"end":{"line":41,"column":9,"offset":951},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":943},"end":{"line":41,"column":9,"offset":951},"indent":[]},"data":{"id":"풀이-코드","htmlAttributes":{"id":"풀이-코드"},"hProperties":{"id":"풀이-코드","style":"position:relative;"}}},{"type":"html","value":"<div class=\"gatsby-code-title\">Python</div>"},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> costs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 부모 노드를 찾는 함수</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> x\n        parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 두 부모 노드를 합치는 함수</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">union_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n        y <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 더 작은 값을 부모로 지칭</span>\n        <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">:</span> parent<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y\n\n    <span class=\"token comment\"># 두 노드가 같은 부모를 가지는 지 찾는 함수</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_same_parent</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        x <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span>\n        y <span class=\"token operator\">=</span> get_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> y<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token comment\"># 특정 간선의 부모 정보 (초기는 자기 자신을 가리킴)</span>\n    parent <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>costs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>costs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        parent<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 선택될 간선을 담을 리스트</span>\n    costs<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 비용이 가장 작은 간선부터 선택</span>\n\n    <span class=\"token comment\"># 주어진 간선이 최소 간선의 개수 일때 (n-1개)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>costs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> costs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 총 만들어지는 간선의 개수는 n-1개</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        edge <span class=\"token operator\">=</span> costs<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 두 점의 부모가 같은지 Check</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> is_same_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> edge<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edge<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            union_parent<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">,</span> edge<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edge<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","position":{"start":{"line":43,"column":1,"offset":953},"end":{"line":89,"column":4,"offset":2171},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#마무리","title":null,"children":[],"data":{"hProperties":{"aria-label":"마무리 permalink","class":"anchor-header before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"마무리","position":{"start":{"line":91,"column":4,"offset":2176},"end":{"line":91,"column":7,"offset":2179},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2173},"end":{"line":91,"column":7,"offset":2179},"indent":[]},"data":{"id":"마무리","htmlAttributes":{"id":"마무리"},"hProperties":{"id":"마무리","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">크루스칼 알고리즘</code>","position":{"start":{"line":93,"column":1,"offset":2181},"end":{"line":93,"column":12,"offset":2192},"indent":[]}},{"type":"text","value":"의 핵심은 사이클을 이루는지에 대한 여부를 확인하는 로직을 구현하는 것입니다.","position":{"start":{"line":93,"column":12,"offset":2192},"end":{"line":93,"column":55,"offset":2235},"indent":[]}},{"type":"break","position":{"start":{"line":93,"column":55,"offset":2235},"end":{"line":94,"column":1,"offset":2238},"indent":[1]}},{"type":"text","value":"저는 현재 집합이 같은 부모를 향하고 있는지(사이클이 발생하는지) 여부를 알 수 있는 ","position":{"start":{"line":94,"column":1,"offset":2238},"end":{"line":94,"column":49,"offset":2286},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Union-Find</code>","position":{"start":{"line":94,"column":49,"offset":2286},"end":{"line":94,"column":61,"offset":2298},"indent":[]}},{"type":"text","value":"라는 알고리즘을 사용하여 문제를 해결했습니다.","position":{"start":{"line":94,"column":61,"offset":2298},"end":{"line":94,"column":86,"offset":2323},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2181},"end":{"line":94,"column":86,"offset":2323},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"또한, 주의할 점은 주어진 간선(","position":{"start":{"line":96,"column":1,"offset":2325},"end":{"line":96,"column":19,"offset":2343},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">costs</code>","position":{"start":{"line":96,"column":19,"offset":2343},"end":{"line":96,"column":26,"offset":2350},"indent":[]}},{"type":"text","value":"의 개수) 이 ","position":{"start":{"line":96,"column":26,"offset":2350},"end":{"line":96,"column":34,"offset":2358},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">(n-1)개</code>","position":{"start":{"line":96,"column":34,"offset":2358},"end":{"line":96,"column":42,"offset":2366},"indent":[]}},{"type":"text","value":" 일 경우 입니다.","position":{"start":{"line":96,"column":42,"offset":2366},"end":{"line":96,"column":52,"offset":2376},"indent":[]}},{"type":"break","position":{"start":{"line":96,"column":52,"offset":2376},"end":{"line":97,"column":1,"offset":2379},"indent":[1]}},{"type":"text","value":"해당 경우에는 그냥 주어진 간선의 비용을 모두 합해서 return하면 됩니다.","position":{"start":{"line":97,"column":1,"offset":2379},"end":{"line":97,"column":44,"offset":2422},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2325},"end":{"line":97,"column":44,"offset":2422},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"코드의 길이는 각 기능을 함수로 빼는 과정에서 풀이가 길어진 것 같습니다.","position":{"start":{"line":99,"column":1,"offset":2424},"end":{"line":99,"column":42,"offset":2465},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2424},"end":{"line":99,"column":42,"offset":2465},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"더 좋은 방법이 있다면 알려주세욘 🙇🏻‍♂️","position":{"start":{"line":101,"column":1,"offset":2467},"end":{"line":101,"column":27,"offset":2493},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2467},"end":{"line":101,"column":27,"offset":2493},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":102,"column":1,"offset":2494}}}}